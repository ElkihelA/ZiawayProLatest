{"version":3,"sources":["../node_modules/react-bootstrap/esm/Alert.js","app/views/sessions/register/plans.js","app/views/sessions/register/payment.js","app/views/sessions/DangerAlert.jsx","app/views/sessions/register/form.js","app/views/sessions/register/index.js"],"names":["_excluded","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","SafeAnchor","defaultProps","show","transition","Fade","closeLabel","Alert","React","forwardRef","uncontrolledProps","ref","_useUncontrolled","useUncontrolled","bsPrefix","className","children","variant","onClose","dismissible","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","createElement","_extends","role","undefined","classNames","CloseButton","onClick","label","unmountOnExit","in","Link","Heading","connect","state","subscription","dispatch","loading","plans","useState","period","setPeriod","useEffect","getAllPlans","Container","id","defaultActiveKey","Item","eventKey","Content","Object","entries","map","elem","Pane","item","idx","key","image","style","width","src","alt","name","trial_period_days","Intl","NumberFormat","maximumFractionDigits","format","amount","metadata","meta","index","value","val","type","plan","setSubscriptionData","nextStep","ELEMENT_OPTIONS","base","fontSize","color","letterSpacing","height","border","borderRadius","invalid","validationSchema","t","yup","shape","required","setError","stripe","useStripe","elements","useElements","formik","useFormik","initialValues","onSubmit","values","submitPayment","a","cardElement","getElement","CardNumberElement","createToken","token","error","console","log","message","createSubscription","source","user","current","cardName","goToStep","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","errors","touched","options","disabled","DangerAlert","showAlert","setShowAlert","maxWidth","phoneRegExp","SignupSchema","username","phoneno","matches","email","password","min","repassword","oneOf","acceptTerms","policy","googleLogin","facebookLogin","useTranslation","useDispatch","createNewAccount","step","backgroundSize","backgroundImage","to","clientId","onSuccess","resp","onFailure","err","render","Button","appId","callback","fields","scope","renderProps","data-deltad-checkmail","paddingLeft","checked","href","target","rel","isSubmitting","stripePromise","loadStripe","process","REACT_APP_API_STRIPE_PUBLIC_KEY","firebaseSignUpEmailPassword","PropTypes","func","isRequired","signUpUsingGoogle","signUpUsingFacebook","PaiementIntentSecret","login","profile","firebase","customerId","updateProfile","withTranslation","actions","SET_STATE","payload","textAlign","initialStep","instance"],"mappings":"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","file":"static/js/37.25fde3f6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport SafeAnchor from './SafeAnchor';\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nvar AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nvar AlertLink = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar Alert = /*#__PURE__*/React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  var Transition = transition === true ? Fade : transition;\n  var alert = /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, !Transition ? props : undefined, {\n    ref: ref,\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    unmountOnExit: true\n  }, props, {\n    ref: undefined,\n    in: show\n  }), alert);\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = AlertLink;\nAlert.Heading = AlertHeading;\nexport default Alert;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Tab, Tabs, Button, TabContent, Nav } from \"react-bootstrap\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAllPlans,\r\n  setSubscriptionData,\r\n} from \"../../../redux/actions/SubscriptionActions\";\r\nimport { Loading } from \"@gull\";\r\n\r\nconst PlansList = ({ subscription = {}, dispatch, ...props }) => {\r\n  const { loading = true, plans = {} } = subscription;\r\n  const [period, setPeriod] = useState(\"week\");\r\n  React.useEffect(() => {\r\n    dispatch(getAllPlans());\r\n  }, []);\r\n\r\n  const selectOffer = (plan) => {\r\n    dispatch(setSubscriptionData({ plan }));\r\n    props.nextStep();\r\n  };\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      <SimpleCard>\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"week\">\r\n          <Nav variant=\"pills\" className=\"px-2 d-flex justify-content-center mb-5\">\r\n            <Nav.Item className=\"mr-2\" onClick={() => setPeriod(\"week\")}>\r\n              <Nav.Link eventKey=\"week\">Weekly</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mr-2\" onClick={() => setPeriod(\"month\")}>\r\n              <Nav.Link eventKey=\"month\">Monthly</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item onClick={() => setPeriod(\"year\")}>\r\n              <Nav.Link eventKey=\"year\">Yearly</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {plans && (\r\n            <Tab.Content>\r\n              <>\r\n                {Object.entries(plans).map((elem) => {\r\n                  return (\r\n                    <Tab.Pane eventKey={elem[0]}>\r\n                      <div className=\"row\">\r\n                        {elem[1].map((item, idx) => {\r\n                          return (\r\n                            <div\r\n                              key={idx}\r\n                              className=\"col-md-12 col-lg-4 col-xl-4\"\r\n                            >\r\n                              <div className=\"ul-pricing__table-2\">\r\n                                {item.image && (\r\n                                  <div className=\"ul-pricing__image text-primary m-0\">\r\n                                    <img style={{width: 100}} src={item.image} alt=\"price\" />\r\n                                  </div>\r\n                                )}\r\n                                <div className=\"ul-pricing__title\">\r\n                                  <h2 className=\"heading text-primary\">\r\n                                    {item.name}\r\n                                  </h2>\r\n                                </div>\r\n                                {item.trial_period_days && (\r\n                                  <div className=\"ul-pricing__text text-mute\">\r\n                                    {item.trial_period_days} days free trial\r\n                                    period\r\n                                  </div>\r\n                                )}\r\n                                <div className=\"ul-pricing__main-number\">\r\n                                  <h3 className=\"heading text-primary\">\r\n                                    $\r\n                                    {new Intl.NumberFormat(\"us-US\", {\r\n                                      maximumFractionDigits: 2,\r\n                                    }).format(item.amount / 100)}\r\n                                  </h3>\r\n                                  <div className=\"ul-pricing__month\">\r\n                                    <small className=\"text-purple-100\">\r\n                                      per {period}\r\n                                    </small>\r\n                                  </div>\r\n                                </div>\r\n                                {item.metadata.map((meta, index) => {\r\n                                    return (\r\n                                        <div key={index} className=\"ul-pricing__list\">\r\n                                            <h4 className=\"heading text-primary\">{meta.key}</h4>\r\n                                            <div className=\"ul-pricing__table-listing mb-4\">\r\n                                                <ul>\r\n                                                    {meta.value.map(val => (\r\n                                                        <li key={val} className=\"t-font-bolder\">{val}</li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                \r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-lg btn-default btn-rounded btn-primary m-1\"\r\n                                  onClick={() => selectOffer(item)}\r\n                                >\r\n                                  Select Offer\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  );\r\n                })}\r\n              </>\r\n            </Tab.Content>\r\n          )}\r\n        </Tab.Container>\r\n      </SimpleCard>\r\n    </>\r\n  );\r\n};\r\nconst mapStateProps = (state) => ({\r\n  subscription: state.subscription,\r\n});\r\nexport default connect(mapStateProps)(PlansList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport \"./style.scss\"\r\nimport { createSubscription, setSubscriptionData } from \"app/redux/actions/SubscriptionActions\";\r\nimport { Loading } from \"@gull\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nconst ELEMENT_OPTIONS = {\r\n    style: {\r\n        base: {\r\n            fontSize: '18px',\r\n            color: '#424770',\r\n            letterSpacing: '0.025em',\r\n            height: \"50px\",\r\n            border: \"1px solid rgba(0,0,0,0.2)\",\r\n            borderRadius: \"5px\",\r\n            '::placeholder': {\r\n                color: '#e3e3e3',\r\n            },\r\n        },\r\n        invalid: {\r\n            color: '#9e2146',\r\n        },\r\n    },\r\n};\r\n\r\nconst validationSchema = (t) =>\r\n    yup.object().shape({\r\n        name: yup.string().required(\"Please put the name on card\"),\r\n    });\r\n\r\nfunction Payment(props) {\r\n    const { subscription = {}, dispatch } = props\r\n    const [error, setError] = useState(false)\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {name: ''},\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            submitPayment(values)\r\n        },\r\n    });\r\n\r\n    const submitPayment = async (values) => {\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n        setError(false)\r\n        dispatch(setSubscriptionData({ loading: true }));\r\n        const cardElement = elements.getElement(CardNumberElement);\r\n        const { token, error } = await stripe.createToken(cardElement)\r\n        if (error) {\r\n            console.log('[error]', error);\r\n            setError(error.message);\r\n            dispatch(setSubscriptionData({ loading: true }));\r\n        } else {\r\n            console.log('[PaymentMethod]', token);\r\n            dispatch(createSubscription({source: token.id, plan: subscription.plan, user: subscription.current, cardName: values.name}, props.goToStep))\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            {subscription.loading && <Loading /> }\r\n            <div className=\"row p-3 payment-form\">\r\n                <div className=\"col-md-6\">\r\n                    Some additional informations\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {formik && <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">\r\n                                    Name On Card*\r\n                                </label>\r\n                                <input\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.name}\r\n                                />\r\n                                {formik.errors.name && formik.touched.name && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.name}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        \r\n                        <div className=\"cardNubmer mb-3\">\r\n                            <CardNumberElement options={ELEMENT_OPTIONS} />\r\n                        </div>\r\n                        <div className=\"cvc-data-container\">\r\n                            <CardExpiryElement options={ELEMENT_OPTIONS} />\r\n                            <CardCvcElement options={ELEMENT_OPTIONS} />\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-primary btn-block btn-rounded mt-3\"\r\n                                onClick={submitPayment}\r\n                                disabled={subscription.loading}\r\n                            >\r\n                                Subscribe\r\n                            </button>\r\n                        </div>\r\n                    </form>}\r\n                </div>\r\n            </div></>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    subscription: state.subscription\r\n})\r\nexport default connect(mapStateToProps)(Payment)","import React, { Fragment } from \"react\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nconst DangerAlert = (props) => {\r\n  const [showAlert, setShowAlert] = React.useState(true);\r\n\r\n  return (\r\n    <Fragment>\r\n      {showAlert && props.show && (\r\n        <Alert variant=\"danger\" dismissible onClose={() => setShowAlert(false)} style={{maxWidth:500}}>\r\n         \r\n          <p>\r\n            {props.error}\r\n            \r\n          \r\n          </p>\r\n        </Alert>\r\n      )}\r\n  \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DangerAlert;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useDispatch, connect} from \"react-redux\";\r\nimport {\r\n    firebaseSignUpEmailPassword,\r\n    signUpUsingGoogle,\r\n    signUpUsingFacebook,\r\n} from \"app/redux/actions/LoginActions\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport { createNewAccount, setSubscriptionData } from \"../../../redux/actions/SubscriptionActions\";\r\nimport { googleLogin, facebookLogin } from \"app/redux/actions/LoginActions\";\r\nimport { Loading, SimpleCard } from \"@gull\";\r\n\r\nimport DangerAlert from \"../DangerAlert\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport firebaseAuthService from \"../../../services/firebase/firebaseAuthService\";\r\nimport { useFormik } from 'formik';\r\nimport GoogleLogin from \"react-google-login\";\r\nconst phoneRegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\nconst SignupSchema = (t) =>\r\n    yup.object().shape({\r\n        username: yup.string().required(\"Le nom et prénom sont obligatoire\"),\r\n        phoneno: yup\r\n            .string()\r\n            .required(\"Le numéro de téléphone est requis\")\r\n            .matches(\r\n                phoneRegExp,\r\n                \"Format non valide, XXX-XXX-XXXX est le bon format\"\r\n            ),\r\n        email: yup\r\n            .string()\r\n            .email(\"E-mail invalide\")\r\n            .required(\"L'E-mail est requis\"),\r\n        password: yup\r\n            .string()\r\n            .min(8, \"Le mot de passe doit contenir au minimum 8 caractères\")\r\n            .required(\"Le mot de passe est requis\"),\r\n        repassword: yup\r\n            .string()\r\n            .required(\"Répéter le mot de passe\")\r\n            .oneOf([yup.ref(\"password\")], \"Les mots de passe ne concordent pas\"),\r\n\r\n        acceptTerms: yup.bool().oneOf([true], \"Sign_in.21\"),\r\n    });\r\nconst initialValues = {\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n    plan: \"\",\r\n    policy: false,\r\n    acceptTerms: false,\r\n}\r\nfunction Signup(props) {\r\n    const { t } = useTranslation();\r\n    const {subscription = {}} = props\r\n    const [error, setError] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: SignupSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(createNewAccount(values))\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"props\", props);\r\n        if(subscription.step === 2) {\r\n            props.nextStep()\r\n        }\r\n    }, [subscription.step]);\r\n\r\n    const responseGoogle = (resp) => {\r\n        const { nextStep } = props;\r\n        props.googleLogin(t, resp, nextStep, true)\r\n    }\r\n\r\n    const responseFacebook = (resp) => {\r\n        const {nextStep} = props;\r\n        props.facebookLogin(t, resp, nextStep, true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {subscription.loading && <Loading />}\r\n            <div className=\"row\">\r\n                <div\r\n                    className=\"col-md-6 text-center \"\r\n                    style={{\r\n                        backgroundSize: \"cover\",\r\n                        backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\r\n                    }}\r\n                >\r\n                    <div className=\"pl-3 auth-right\">\r\n                        <div className=\"auth-logo text-center mt-4\">\r\n                            <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"flex-grow-1\"></div>\r\n                        <div className=\"w-100 mb-4\">\r\n                            <Link\r\n                                to=\"/session/signin\"\r\n                                className=\"btn btn-rounded btn-outline-primary btn-outline-email btn-block btn-icon-text\"\r\n                            >\r\n                                <i className=\"i-Mail-with-At-Sign\"></i>{\" \"}\r\n                                {t(\"Sign_up.1\")}\r\n                            </Link>\r\n                        </div>\r\n                        <GoogleLogin\r\n                            clientId={\"224379580293-ph903a84q69uobrocoemkoh3u5at2td6.apps.googleusercontent.com\"}\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={(err) => {\r\n                            console.log(err);\r\n                            }}\r\n                            render={props => (\r\n                            <Button\r\n                                onClick={props.onClick}\r\n                                className=\"btn btn-rounded btn-outline-google btn-block btn-icon-text\"\r\n                            >\r\n                                <i className=\"i-Google-Plus\"></i> {t(\"Sign_up.15\")}\r\n                            </Button>\r\n                            )}\r\n                        />\r\n                        <FacebookLogin\r\n                        appId={\"448032760458177\"}\r\n                        callback={responseFacebook}\r\n                        fields=\"name,email,picture\"\r\n                        scope=\"public_profile, email\"\r\n                        render={(renderProps) => (\r\n                            <Button\r\n                              onClick={renderProps.onClick}\r\n                              className=\"btn btn-rounded btn-block btn-icon-text btn-outline-facebook\"\r\n                            >\r\n                              <i className=\"i-Facebook-2\"></i> {t(\"Sign_in.16\")}\r\n                            </Button>\r\n                        )}\r\n                      />\r\n                        <div className=\"flex-grow-1\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"p-4\">\r\n                        <h1 className=\"mb-3 text-18\">{t(\"Sign_up.2\")}</h1>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">\r\n                                    {t(\"Sign_up.3\")}*\r\n                                </label>\r\n                                <input\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.username}\r\n                                />\r\n                                {formik.errors.username && formik.touched.username && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.username}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phoneno\">\r\n                                    {t(\"Sign_up.12\")}*\r\n                                </label>\r\n                                <input\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    name=\"phoneno\"\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.phoneno}\r\n                                />\r\n                                {formik.errors.phoneno && formik.touched.phoneno && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.phoneno}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">\r\n                                    {t(\"Sign_up.4\")}*{\" \"}\r\n                                </label>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    type=\"email\"\r\n                                    data-deltad-checkmail=\"1\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.email}\r\n                                />\r\n                                {formik.errors.email && formik.touched.email && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.email}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">\r\n                                    {t(\"Sign_up.5\")}*\r\n                                </label>\r\n                                <input\r\n                                    name=\"password\"\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    type=\"password\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.password}\r\n                                />\r\n                                {formik.errors.password && formik.touched.password && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.password}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"repassword\">\r\n                                    {t(\"Sign_up.6\")}*\r\n                                </label>\r\n                                <input\r\n                                    name=\"repassword\"\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    type=\"password\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.repassword}\r\n                                />\r\n                                {formik.errors.repassword && formik.touched.repassword && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.repassword}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-sm-10\">\r\n                                <DangerAlert\r\n                                    show={error}\r\n                                    error={error}\r\n                                ></DangerAlert>\r\n                            </div>\r\n                            <div style={{ paddingLeft: \"22px\" }}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"acceptTerms\"\r\n                                    onChange={formik.handleChange}\r\n                                    checked={formik.values.acceptTerms}\r\n                                    className={\r\n                                        \"form-check-input \" +\r\n                                        (formik.errors.acceptTerms && formik.touched.acceptTerms\r\n                                            ? \" is-invalid\"\r\n                                            : \"\")\r\n                                    }\r\n                                />\r\n                                <label\r\n                                    htmlFor=\"acceptTerms\"\r\n                                    className=\"form-check-label\"\r\n                                >\r\n                                    {t(\"Sign_in.13\")} <br />\r\n                                    <a\r\n                                        href=\"https://blog.ziaway.ca/politique-de-confidentialit%C3%A9\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        {t(\"Sign_in.14\")}\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n                            {formik.touched.acceptTerms && formik.errors.acceptTerms && (\r\n                                <small className=\"text-danger mt-1 ml-2\">\r\n                                    {t(formik.errors.acceptTerms)}\r\n                                </small>\r\n                            )}\r\n                            <button\r\n                                className=\"btn btn-primary btn-block btn-rounded mt-3\"\r\n                                type=\"submit\"\r\n                                // disabled={formik.isSubmitting && !error}\r\n                            >\r\n                                {subscription.isSubmitting && !error ? (\r\n                                    <span>{t(\"Sign_up.7\")}...</span>\r\n                                ) : (\r\n                                    <span>{t(\"Sign_up.8\")}</span>\r\n                                )}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    subscription: state.subscription\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    googleLogin,\r\n    facebookLogin\r\n})(Signup)","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepWizard from \"react-step-wizard\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { connect } from \"react-redux\";\r\nimport Signup from \"./form\";\r\nimport PlansList from \"./plans\"\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport Payment from \"./payment\";\r\nimport { Loading } from \"@gull\";\r\nimport { actions } from \"app/redux/actions/SubscriptionActions\";\r\nconst stripePromise = loadStripe(process.env.REACT_APP_API_STRIPE_PUBLIC_KEY);\r\n\r\nconst Register = ({t, subscription = {}, dispatch}) => {\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: actions.SET_STATE,\r\n      payload: {\r\n        loading: false\r\n      }\r\n    })\r\n  }, [])\r\n\r\n    return (\r\n        <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-3.jpg)\",\r\n        }}\r\n      >\r\n        {subscription.loading && <Loading />}\r\n        <div className=\"auth-content \">\r\n          <div className=\" d-flex flex-column text-align-center  justify-content-center\">\r\n            {/* <h2\r\n              className=\"font-weight-bold text-align-center\"\r\n              style={{ textAlign: \"center\", color: \"white\", fontSize: \"50px\" }}\r\n            >\r\n              Dernière étape\r\n            </h2> */}\r\n\r\n            <p\r\n              className=\"font-weight-bold text-align-center\"\r\n              style={{ textAlign: \"center\", color: \"white\", fontSize: \"15px\" }}\r\n            >\r\n              {t(\"Sign_up.17\")}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <StepWizard\r\n                  initialStep={subscription.step || 1}\r\n                  instance={(e) => console.log(e)}\r\n                >\r\n                    <Signup/>\r\n                    <PlansList />\r\n                    <Elements stripe={stripePromise}>\r\n                      <Payment />\r\n                    </Elements>\r\n                </StepWizard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  firebaseSignUpEmailPassword: PropTypes.func.isRequired,\r\n  signUpUsingGoogle: PropTypes.func.isRequired,\r\n  signUpUsingFacebook: PropTypes.func.isRequired,\r\n  PaiementIntentSecret: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  login: state.login,\r\n  profile: state.firebase.profile,\r\n  customerId: state.firebase.profile.customerId,\r\n  updateProfile: PropTypes.func.isRequired,\r\n  subscription: state.subscription\r\n});\r\n\r\nexport default connect(mapStateToProps)(withTranslation()(Register))\r\n"],"sourceRoot":""}