{"version":3,"sources":["../node_modules/react-bootstrap/esm/ProgressBar.js","app/views/extra-kits/UploadForm.jsx"],"names":["getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","srOnly","striped","animated","className","style","variant","bsPrefix","props","_objectWithoutPropertiesLoose","React","createElement","_extends","role","classNames","width","ProgressBar","forwardRef","_ref2","isChild","useBootstrapPrefix","children","wrapperProps","map","child","cloneElement","displayName","defaultProps","UploadForm","state","dragClass","files","statusList","queProgress","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","setState","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","item","handleSingleCancel","handleCancelAll","this","isEmpty","length","routeSegments","name","path","title","htmlFor","as","onChange","id","type","multiple","onDragEnter","onDragOver","onDrop","lg","md","key","sm","xs","size","toFixed","disabled","onClick","Component"],"mappings":"kHAAA,mEAkDA,SAASA,EAAcC,EAAKC,EAAKC,GAC/B,IAAIC,GAAcH,EAAMC,IAAQC,EAAMD,GAAO,IAC7C,OAAOG,KAAKC,MA9CQ,IA8CFF,GA9CE,IAiDtB,SAASG,EAAkBC,EAAMC,GAC/B,IAAIC,EAEAR,EAAMM,EAAKN,IACXD,EAAMO,EAAKP,IACXE,EAAMK,EAAKL,IACXQ,EAAQH,EAAKG,MACbC,EAASJ,EAAKI,OACdC,EAAUL,EAAKK,QACfC,EAAWN,EAAKM,SAChBC,EAAYP,EAAKO,UACjBC,EAAQR,EAAKQ,MACbC,EAAUT,EAAKS,QACfC,EAAWV,EAAKU,SAChBC,EAAQC,YAA8BZ,EAAM,CAAC,MAAO,MAAO,MAAO,QAAS,SAAU,UAAW,WAAY,YAAa,QAAS,UAAW,aAEjJ,OAAoBa,IAAMC,cAAc,MAAOC,YAAS,CACtDd,IAAKA,GACJU,EAAO,CACRK,KAAM,cACNT,UAAWU,IAAWV,EAAWG,EAAW,QAASR,EAAc,GAAIA,EAAY,MAAQO,GAAWA,EAASP,EAAYQ,EAAW,iBAAmBJ,EAAUJ,EAAYQ,EAAW,gBAAkBJ,GAAYD,EAASH,IACjOM,MAAOO,YAAS,CACdG,MAAO1B,EAAcC,EAAKC,EAAKC,GAAO,KACrCa,GACH,gBAAiBf,EACjB,gBAAiBC,EACjB,gBAAiBC,IACfS,EAAsBS,IAAMC,cAAc,OAAQ,CACpDP,UAAW,WACVJ,GAASA,GAGd,IAAIgB,EAA2BN,IAAMO,YAAW,SAAUC,EAAOpB,GAC/D,IAAIqB,EAAUD,EAAMC,QAChBX,EAAQC,YAA8BS,EAAO,CAAC,YAIlD,GAFAV,EAAMD,SAAWa,YAAmBZ,EAAMD,SAAU,YAEhDY,EACF,OAAOvB,EAAkBY,EAAOV,GAGlC,IAAIP,EAAMiB,EAAMjB,IACZD,EAAMkB,EAAMlB,IACZE,EAAMgB,EAAMhB,IACZQ,EAAQQ,EAAMR,MACdC,EAASO,EAAMP,OACfC,EAAUM,EAAMN,QAChBC,EAAWK,EAAML,SACjBI,EAAWC,EAAMD,SACjBD,EAAUE,EAAMF,QAChBF,EAAYI,EAAMJ,UAClBiB,EAAWb,EAAMa,SACjBC,EAAeb,YAA8BD,EAAO,CAAC,MAAO,MAAO,MAAO,QAAS,SAAU,UAAW,WAAY,WAAY,UAAW,YAAa,aAE5J,OAAoBE,IAAMC,cAAc,MAAOC,YAAS,CACtDd,IAAKA,GACJwB,EAAc,CACflB,UAAWU,IAAWV,EAAWG,KAC/Bc,EAAWE,YAAIF,GAAU,SAAUG,GACrC,OAAoBC,uBAAaD,EAAO,CACtCL,SAAS,OAERvB,EAAkB,CACrBL,IAAKA,EACLD,IAAKA,EACLE,IAAKA,EACLQ,MAAOA,EACPC,OAAQA,EACRC,QAASA,EACTC,SAAUA,EACVI,SAAUA,EACVD,QAASA,GACRR,OAELkB,EAAYU,YAAc,cAC1BV,EAAYW,aA1FO,CACjBpC,IAAK,EACLC,IAAK,IACLW,UAAU,EACVgB,SAAS,EACTlB,QAAQ,EACRC,SAAS,GAqFIc,O,2KChITY,E,4MACJC,MAAQ,CACNC,UAAW,GACXC,MAAO,GACPC,WAAY,GACZC,YAAa,G,EAGfC,iBAAmB,SAAAC,GACjB,IAD0B,EACtBJ,EAAQI,EAAMC,OAAOL,MACrBM,EAAO,GAFe,cAIHN,GAJG,IAI1B,2BAA8B,CAAC,IAApBO,EAAmB,QAC5BD,EAAKE,KAAK,CACRC,KAAMF,EACNG,WAAW,EACXC,OAAO,EACPC,SAAU,KATY,8BAa1B,EAAKC,SAAS,CACZb,MAAM,GAAD,OAAMM,M,EAIfQ,eAAiB,SAAAV,GACfA,EAAMW,iBACN,EAAKF,SAAS,CAAEd,UAAW,iB,EAG7BiB,WAAa,SAAAZ,GACXA,EAAMW,iBACNX,EAAMa,UAEN,IAJoB,EAIhBjB,EAAQI,EAAMc,aAAalB,MAC3BM,EAAO,GALS,cAOGN,GAPH,IAOpB,2BAA8B,CAAC,IAApBO,EAAmB,QAC5BD,EAAKE,KAAK,CACRC,KAAMF,EACNG,WAAW,EACXC,OAAO,EACPC,SAAU,KAZM,8BAqBpB,OALA,EAAKC,SAAS,CACZd,UAAW,GACXC,MAAM,GAAD,OAAMM,MAGN,G,EAGTa,gBAAkB,SAAAf,GAChB,EAAKS,SAAS,CAAEd,UAAW,iB,EAG7BqB,mBAAqB,SAAAC,GACnB,IAAIrB,EAAK,YAAO,EAAKF,MAAME,OAC3BA,EAAMsB,OAAOD,EAAO,GACpB,EAAKR,SAAS,CACZb,MAAM,YAAKA,M,EAIfuB,gBAAkB,WAChB,EAAKV,SAAS,CAAEb,MAAO,GAAIE,YAAa,K,EAG1CsB,iBAAmB,SAAAH,GACjB,IAAII,EAAQ,YAAO,EAAK3B,MAAME,OAC1BS,EAAO,EAAKX,MAAME,MAAMqB,GAE5BI,EAASJ,GAAT,2BAAuBZ,GAAvB,IAA6BC,WAAW,EAAMC,OAAO,IAErD,EAAKE,SAAS,CACZb,MAAM,YAAKyB,M,EAIfC,cAAgB,WACd,IAAID,EAAW,GAEf,EAAK3B,MAAME,MAAMR,KAAI,SAAAmC,GAOnB,OANAF,EAASjB,KAAT,2BACKmB,GADL,IAEEjB,WAAW,EACXC,OAAO,KAGFgB,KAGT,EAAKd,SAAS,CACZb,MAAM,GAAD,OAAMyB,GACXvB,YAAa,M,EAIjB0B,mBAAqB,SAAAP,GACnB,IAAII,EAAQ,YAAO,EAAK3B,MAAME,OAC1BS,EAAO,EAAKX,MAAME,MAAMqB,GAE5BI,EAASJ,GAAT,2BAAuBZ,GAAvB,IAA6BC,WAAW,EAAOC,OAAO,IAEtD,EAAKE,SAAS,CACZb,MAAM,YAAKyB,M,EAIfI,gBAAkB,WAChB,IAAIJ,EAAW,GAEf,EAAK3B,MAAME,MAAMR,KAAI,SAAAmC,GAOnB,OANAF,EAASjB,KAAT,2BACKmB,GADL,IAEEjB,WAAW,EACXC,OAAO,KAGFgB,KAGT,EAAKd,SAAS,CACZb,MAAM,GAAD,OAAMyB,GACXvB,YAAa,K,4CAIjB,WAAU,IAAD,OACP,EAAwC4B,KAAKhC,MAAvCC,EAAN,EAAMA,UAAWC,EAAjB,EAAiBA,MAAOE,EAAxB,EAAwBA,YACpB6B,EAA2B,IAAjB/B,EAAMgC,OAEpB,OACE,6BACE,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,OAAQC,KAAM,KACtB,CAAED,KAAM,aAAcC,KAAM,eAC5B,CAAED,KAAM,aAGZ,kBAAC,IAAD,CAAYE,MAAM,eAChB,yBAAK/D,UAAU,yBACb,2BAAOgE,QAAQ,sBACb,kBAAC,IAAD,CAAQhE,UAAU,cAAciE,GAAG,QACjC,yBAAKjE,UAAU,oBACb,uBAAGA,UAAU,oBAAb,KACA,gDAIN,2BACEA,UAAU,SACVkE,SAAUT,KAAK3B,iBACfqC,GAAG,qBACHC,KAAK,SAEP,yBAAKpE,UAAU,SACf,2BAAOgE,QAAQ,wBACb,kBAAC,IAAD,CAAQhE,UAAU,cAAciE,GAAG,QACjC,yBAAKjE,UAAU,oBACb,uBAAGA,UAAU,qBAAb,KACA,kDAIN,2BACEA,UAAU,SACVkE,SAAUT,KAAK3B,iBACfqC,GAAG,uBACHC,KAAK,OACLC,UAAQ,KAIZ,yBACErE,UAAS,UAAK0B,EAAL,mEACT4C,YAAab,KAAKX,gBAClByB,WAAYd,KAAKhB,eACjB+B,OAAQf,KAAKd,YAEZe,EACC,sDAEA,wBAAI1D,UAAU,OACX2B,EAAMgC,OADT,QACsBhC,EAAMgC,OAAS,EAAI,IAAM,GAD/C,iBAMJ,kBAAC,IAAD,CAAM3D,UAAU,QACd,kBAAC,IAAD,CAAKA,UAAU,0BACb,kBAAC,IAAD,CAAKyE,GAAI,EAAGC,GAAI,GAAhB,QAGA,kBAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,GAAhB,QAGA,kBAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,GAAhB,YAGA,kBAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,GAAhB,UAGA,kBAAC,IAAD,CAAKD,GAAI,EAAGC,GAAI,GAAhB,YAIF,wBAAI1E,UAAU,cAEb0D,GAAW,uBAAG1D,UAAU,YAAb,gBAEX2B,EAAMR,KAAI,SAACmC,EAAMN,GAChB,IAAMZ,EAAqCkB,EAArClB,KAAMC,EAA+BiB,EAA/BjB,UAAWC,EAAoBgB,EAApBhB,MAAOC,EAAae,EAAbf,SAC9B,OACE,kBAAC,IAAD,CAAKvC,UAAU,0BAA0B2E,IAAKvC,EAAKyB,MACjD,kBAAC,IAAD,CAAKY,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAI7E,UAAU,QAC1CoC,EAAKyB,MAER,kBAAC,IAAD,CAAKY,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAI7E,UAAU,SACzCoC,EAAK0C,KAAO,KAAO,MAAMC,QAAQ,GADrC,OAGA,kBAAC,IAAD,CAAKN,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAI7E,UAAU,QAC3C,kBAAC,IAAD,CACEd,IAAKqD,EACLrC,QAAQ,UACRF,UAAU,mBAGd,kBAAC,IAAD,CAAKyE,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAI7E,UAAU,QAC1CsC,GACC,uBAAGtC,UAAU,qCAAb,MAGJ,kBAAC,IAAD,CAAKyE,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAI7E,UAAU,QAC3C,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEgF,SAAU3C,EACV4C,QAAS,kBAAM,EAAK9B,iBAAiBH,KAFvC,UAMA,kBAAC,IAAD,CACEhD,UAAU,OACVE,QAAQ,UACR8E,UAAW3C,EACX4C,QAAS,kBAAM,EAAK1B,mBAAmBP,KAJzC,UAQA,kBAAC,IAAD,CACE9C,QAAQ,SACR+E,QAAS,kBAAM,EAAKlC,mBAAmBC,KAFzC,iBAaZ,6BACE,uBAAGhD,UAAU,OAAb,mBACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,CACEd,IAAK2C,EACL3B,QAAQ,UACRF,UAAU,mBAGd,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAQgF,SAAUtB,EAASuB,QAASxB,KAAKJ,eAAzC,cAGA,kBAAC,IAAD,CACErD,UAAU,OACVE,QAAQ,UACR8E,SAAUtB,EACVuB,QAASxB,KAAKD,iBAJhB,eAQEE,GACA,kBAAC,IAAD,CAAQxD,QAAQ,SAAS+E,QAASxB,KAAKP,iBAAvC,sB,GAhSSgC,aA4SV1D","file":"static/js/54.afada33d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import React, { Component } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"@gull\";\r\nimport { Button, Card, Row, Col, ProgressBar } from \"react-bootstrap\";\r\n\r\nclass UploadForm extends Component {\r\n  state = {\r\n    dragClass: \"\",\r\n    files: [],\r\n    statusList: [],\r\n    queProgress: 0\r\n  };\r\n\r\n  handleFileSelect = event => {\r\n    let files = event.target.files;\r\n    let list = [];\r\n\r\n    for (const iterator of files) {\r\n      list.push({\r\n        file: iterator,\r\n        uploading: false,\r\n        error: false,\r\n        progress: 0\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      files: [...list]\r\n    });\r\n  };\r\n\r\n  handleDragOver = event => {\r\n    event.preventDefault();\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n\r\n  handleDrop = event => {\r\n    event.preventDefault();\r\n    event.persist();\r\n\r\n    let files = event.dataTransfer.files;\r\n    let list = [];\r\n\r\n    for (const iterator of files) {\r\n      list.push({\r\n        file: iterator,\r\n        uploading: false,\r\n        error: false,\r\n        progress: 0\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      dragClass: \"\",\r\n      files: [...list]\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  handleDragStart = event => {\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n\r\n  handleSingleRemove = index => {\r\n    let files = [...this.state.files];\r\n    files.splice(index, 1);\r\n    this.setState({\r\n      files: [...files]\r\n    });\r\n  };\r\n\r\n  handleAllRemove = () => {\r\n    this.setState({ files: [], queProgress: 0 });\r\n  };\r\n\r\n  uploadSingleFile = index => {\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n\r\n    allFiles[index] = { ...file, uploading: true, error: false };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n\r\n  uploadAllFile = () => {\r\n    let allFiles = [];\r\n\r\n    this.state.files.map(item => {\r\n      allFiles.push({\r\n        ...item,\r\n        uploading: true,\r\n        error: false\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    this.setState({\r\n      files: [...allFiles],\r\n      queProgress: 35\r\n    });\r\n  };\r\n\r\n  handleSingleCancel = index => {\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n\r\n    allFiles[index] = { ...file, uploading: false, error: true };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n\r\n  handleCancelAll = () => {\r\n    let allFiles = [];\r\n\r\n    this.state.files.map(item => {\r\n      allFiles.push({\r\n        ...item,\r\n        uploading: false,\r\n        error: true\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    this.setState({\r\n      files: [...allFiles],\r\n      queProgress: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { dragClass, files, queProgress } = this.state;\r\n    let isEmpty = files.length === 0;\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Home\", path: \"/\" },\r\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\r\n            { name: \"Upload\" }\r\n          ]}\r\n        ></Breadcrumb>\r\n        <SimpleCard title=\"File Upload\">\r\n          <div className=\"d-flex flex-wrap mb-4\">\r\n            <label htmlFor=\"upload-single-file\">\r\n              <Button className=\"btn-rounded\" as=\"span\">\r\n                <div className=\"flex flex-middle\">\r\n                  <i className=\"i-Share-on-Cloud\"> </i>\r\n                  <span>Single File</span>\r\n                </div>\r\n              </Button>\r\n            </label>\r\n            <input\r\n              className=\"d-none\"\r\n              onChange={this.handleFileSelect}\r\n              id=\"upload-single-file\"\r\n              type=\"file\"\r\n            />\r\n            <div className=\"px-3\"></div>\r\n            <label htmlFor=\"upload-multiple-file\">\r\n              <Button className=\"btn-rounded\" as=\"span\">\r\n                <div className=\"flex flex-middle\">\r\n                  <i className=\"i-Share-on-Cloud \"> </i>\r\n                  <span>Multiple File</span>\r\n                </div>\r\n              </Button>\r\n            </label>\r\n            <input\r\n              className=\"d-none\"\r\n              onChange={this.handleFileSelect}\r\n              id=\"upload-multiple-file\"\r\n              type=\"file\"\r\n              multiple\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={`${dragClass} dropzone mb-4 d-flex justify-content-center align-items-center`}\r\n            onDragEnter={this.handleDragStart}\r\n            onDragOver={this.handleDragOver}\r\n            onDrop={this.handleDrop}\r\n          >\r\n            {isEmpty ? (\r\n              <span>Drop your files here</span>\r\n            ) : (\r\n              <h5 className=\"m-0\">\r\n                {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\r\n              </h5>\r\n            )}\r\n          </div>\r\n\r\n          <Card className=\"mb-4\">\r\n            <Row className=\"align-items-center p-3\">\r\n              <Col lg={4} md={4}>\r\n                Name\r\n              </Col>\r\n              <Col lg={1} md={1}>\r\n                Size\r\n              </Col>\r\n              <Col lg={2} md={2}>\r\n                Progress\r\n              </Col>\r\n              <Col lg={1} md={1}>\r\n                Status\r\n              </Col>\r\n              <Col lg={4} md={4}>\r\n                Actions\r\n              </Col>\r\n            </Row>\r\n            <hr className=\"mt-0 mb-3\" />\r\n\r\n            {isEmpty && <p className=\"p-3 py-0\">Que is empty</p>}\r\n\r\n            {files.map((item, index) => {\r\n              let { file, uploading, error, progress } = item;\r\n              return (\r\n                <Row className=\"align-items-center px-3\" key={file.name}>\r\n                  <Col lg={4} md={4} sm={12} xs={12} className=\"mb-3\">\r\n                    {file.name}\r\n                  </Col>\r\n                  <Col lg={1} md={1} sm={12} xs={12} className=\"mb-3\">\r\n                    {(file.size / 1024 / 1024).toFixed(1)} MB\r\n                  </Col>\r\n                  <Col lg={2} md={2} sm={12} xs={12} className=\"mb-3\">\r\n                    <ProgressBar\r\n                      now={progress}\r\n                      variant=\"success\"\r\n                      className=\"progress-thin\"\r\n                    ></ProgressBar>\r\n                  </Col>\r\n                  <Col lg={1} md={1} sm={12} xs={12} className=\"mb-3\">\r\n                    {error && (\r\n                      <i className=\"i-Information text-danger text-18\"> </i>\r\n                    )}\r\n                  </Col>\r\n                  <Col lg={4} md={4} sm={12} xs={12} className=\"mb-3\">\r\n                    <div className=\"d-flex\">\r\n                      <Button\r\n                        disabled={uploading}\r\n                        onClick={() => this.uploadSingleFile(index)}\r\n                      >\r\n                        Upload\r\n                      </Button>\r\n                      <Button\r\n                        className=\"mx-8\"\r\n                        variant=\"warning\"\r\n                        disabled={!uploading}\r\n                        onClick={() => this.handleSingleCancel(index)}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => this.handleSingleRemove(index)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n          </Card>\r\n\r\n          <div>\r\n            <p className=\"m-0\">Queue progress:</p>\r\n            <div className=\"py-3\">\r\n              <ProgressBar\r\n                now={queProgress}\r\n                variant=\"success\"\r\n                className=\"progress-thin\"\r\n              ></ProgressBar>\r\n            </div>\r\n            <div className=\"flex\">\r\n              <Button disabled={isEmpty} onClick={this.uploadAllFile}>\r\n                Upload All\r\n              </Button>\r\n              <Button\r\n                className=\"mx-8\"\r\n                variant=\"warning\"\r\n                disabled={isEmpty}\r\n                onClick={this.handleCancelAll}\r\n              >\r\n                Cancel All\r\n              </Button>\r\n              {!isEmpty && (\r\n                <Button variant=\"danger\" onClick={this.handleAllRemove}>\r\n                  Remove All\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </SimpleCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadForm;\r\n"],"sourceRoot":""}