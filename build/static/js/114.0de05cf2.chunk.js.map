{"version":3,"sources":["app/views/leads/leadsComponents/LeadsOne.jsx","app/views/leads/leadview/LeadView.jsx","app/views/leads/leadsComponents/LeadsTwo.jsx","app/views/leads/leadsComponents/LeadsThree.jsx","app/views/leads/Leads.jsx"],"names":["LeadsOne","useState","accept","decline","setStatus","useDispatch","useFirestoreConnect","leads","useSelector","state","firestore","ordered","getUserStatusClass","status","handleChange","id","value","firebase","collection","doc","update","lead_status","then","console","log","catch","err","className","scope","undefined","map","lead","index","key","lead_type","user_name","Dropdown","Toggle","size","Menu","Item","eventKey","onClick","LeadView","userId","property","setProperty","properties","estimated_properties","useEffect","filtered","filter","userID","length","dateCreation","municipalite","adresse","PostalCode","superficieTerrain","categorie","chambres","bains","anneeConstruction","typeBatiment","genreProprietes","stationnement","ZiaEstimation","avisClient","LeadsTwo","show","setShow","setUserID","Modal","onHide","centered","scrollable","Header","closeButton","Title","Body","Button","variant","LeadsThree","Leads","Row","Col","xs","Tab","Container","defaultActiveKey","Nav","Link","Content","Pane"],"mappings":"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","file":"static/js/114.0de05cf2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { SimpleCard } from \"@gull\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport firebase from \"../../../services/firebase/firebase\";\r\n\r\n// import { StatusChange } from \"../../../redux/actions/leadActions\";\r\n\r\nimport { RiExchangeLine } from \"react-icons/ri\";\r\n\r\nimport \"firebase/firestore\";\r\n\r\nconst LeadsOne = () => {\r\n  const [accept, setAccept] = useState(false);\r\n  const [decline, setDecline] = useState(false);\r\n  const [status, setStatus] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useFirestoreConnect(\"leads\");\r\n  const leads = useSelector((state) => state.firestore.ordered.leads);\r\n\r\n  const getUserStatusClass = (status) => {\r\n    switch (status) {\r\n      case \"Accepted\":\r\n        return \"badge-success\";\r\n      case \"Rejected\":\r\n        return \"badge-danger\";\r\n      case \"pending\":\r\n        return \"badge-warning\";\r\n      case \"Replacement\":\r\n        return \"badge-warning\";\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleChange = (id, value) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"leads\")\r\n      .doc(id)\r\n      .update({\r\n        lead_status: value,\r\n      })\r\n      .then(() => {\r\n        console.log(\"updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"something went wrong\", err);\r\n      });\r\n    // dispatch(StatusChange(id, value));\r\n    // NotificationManager.success(\"Updated\", { value });\r\n  };\r\n\r\n  return (\r\n    <SimpleCard className=\"h-100\">\r\n      <div className=\"table-responsive h-100 position-relative\">\r\n        <table\r\n          id=\"user_table\"\r\n          className=\"table table-hover table-striped table-gray-200\"\r\n        >\r\n          <thead className=\"bg-primary text-white\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Type</th>\r\n              <th scope=\"col\">Owner</th>\r\n              <th scope=\"col\">This property is</th>\r\n              <th scope=\"col\">Project progress</th>\r\n              <th scope=\"col\">Action</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {leads === undefined ? (\r\n            <div className=\"position-absolute w-100 h-75 px-0 d-flex justify-content-center align-items-center\">\r\n              <div className=\"spinner-bubble spinner-bubble-primary m-5\"></div>\r\n            </div>\r\n          ) : (\r\n            <tbody>\r\n              {leads.map((lead, index) => (\r\n                <tr key={index}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{lead.lead_type}</td>\r\n\r\n                  <td>{lead.user_name}</td>\r\n\r\n                  <td>{}</td>\r\n                  <td>{}</td>\r\n                  <td>\r\n                    {/* <span className='cursor-pointer text-success mr-2'>\r\n                    <i className='nav-icon i-Pen-2 font-weight-bold'></i>\r\n                  </span>\r\n                  <span className='cursor-pointer text-danger mr-2'>\r\n                    <i className='nav-icon i-Close-Window font-weight-bold'></i>\r\n                  </span> */}\r\n                    <Dropdown>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        {lead.lead_status === \"Accepted\" ? null : (\r\n                          <Dropdown.Toggle\r\n                            className={\r\n                              accept\r\n                                ? `toggle-hidden border-0 p-0 bg-transparent text-success`\r\n                                : decline\r\n                                ? \"toggle-hidden border-0 p-0 bg-transparent text-danger\"\r\n                                : \"toggle-hidden border-0 p-0 bg-transparent text-primary text-primary ml-3\"\r\n                            }\r\n                          >\r\n                            <RiExchangeLine size={16} />\r\n                          </Dropdown.Toggle>\r\n                        )}\r\n                        {lead.lead_status === \"Accepted\" ? (\r\n                          <span className=\"ml-2 badge badge-success p-1 ml-5\">\r\n                            {lead.lead_status}\r\n                          </span>\r\n                        ) : lead.lead_status === \"Rejected\" ? (\r\n                          <span className=\"ml-2 badge badge-danger p-1\">\r\n                            {lead.lead_status}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"ml-2 text-white badge badge-warning p-1\">\r\n                            {lead.lead_status}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n\r\n                      <Dropdown.Menu className=\"p-0\">\r\n                        <Dropdown.Item\r\n                          className=\"bg-danger text-white\"\r\n                          eventKey=\"2\"\r\n                          onClick={() => {\r\n                            setStatus(\"Rejected\");\r\n                            handleChange(lead.id, \"Rejected\");\r\n                          }}\r\n                        >\r\n                          <small>Decline</small>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          className=\"bg-success text-white\"\r\n                          eventKey=\"1\"\r\n                          onClick={() => {\r\n                            setStatus(\"Accepted\");\r\n                            handleChange(lead.id, \"Accepted\");\r\n                          }}\r\n                        >\r\n                          <small>Accept</small>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                      className={`badge p-2 text-white ${getUserStatusClass(\r\n                        lead.lead_status\r\n                      )}`}\r\n                    >\r\n                      {lead.lead_status}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </SimpleCard>\r\n  );\r\n};\r\n\r\nexport default LeadsOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst dataColOne = [\r\n  { title: \"date Creation\", data: \"2020-12-15\" },\r\n  { title: \"municipality\", data: \"Des Châtels\" },\r\n  { title: \"address\", data: \"11660 Rue Ravel, Québec, QC G2B 4S3, Canada\" },\r\n  { title: \"Postal Code\", data: \"G2B 4S3\" },\r\n  { title: \"land area\", data: \"909\" },\r\n  { title: \"category\", data: \"UNI\" },\r\n  { title: \"rooms\", data: \"3\" },\r\n];\r\n\r\nconst dataColTwo = [\r\n  { title: \"genre Proprietes\", data: \"Single storey house\" },\r\n  { title: \"year Construction\", data: \"1984\" },\r\n  { title: \"type Batiment\", data: \"Detached (detached)\" },\r\n  { title: \"Zia Estimation\", data: \"247782.9375\" },\r\n  { title: \"Customer Reviews\", data: \"Top\" },\r\n  { title: \"parking\", data: \"0\" },\r\n  { title: \"baths\", data: \"2\" },\r\n];\r\n\r\nexport const LeadView = ({ userId }) => {\r\n  const [property, setProperty] = useState(null);\r\n  useFirestoreConnect(\"estimated_properties\");\r\n  const properties = useSelector(\r\n    (state) => state.firestore.ordered.estimated_properties\r\n  );\r\n  console.log(userId, properties);\r\n\r\n  useEffect(() => {\r\n    if (properties !== undefined) {\r\n      let filtered = [];\r\n      filtered = properties.filter((property) => property.userID === userId);\r\n      setProperty(filtered);\r\n    }\r\n  }, [properties]);\r\n\r\n  return (\r\n    <>\r\n      {property === null ? (\r\n        <div className=\" d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-bubble spinner-bubble-primary m-5\"></div>\r\n        </div>\r\n      ) : property.length === 0 ? (\r\n        <h2>No Lead Found</h2>\r\n      ) : (\r\n        property.map((property) => (\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-lg-6\">\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Date Creation\r\n                </span>\r\n                <span>{property.dateCreation}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Municipality\r\n                </span>\r\n                <span>{property.municipalite}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Address\r\n                </span>\r\n                <span>{property.adresse}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Postal Code\r\n                </span>\r\n                <span>{property.PostalCode}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Land Area\r\n                </span>\r\n                <span>{property.superficieTerrain}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Category\r\n                </span>\r\n                <span>{property.categorie}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Bedrooms\r\n                </span>\r\n                <span>{property.chambres}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Baths\r\n                </span>\r\n                <span>{property.bains}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-lg-6\">\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Construction Year\r\n                </span>\r\n                <span>{property.anneeConstruction}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Building Type\r\n                </span>\r\n                <span>{property.typeBatiment}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Genre Properties\r\n                </span>\r\n                <span>{property.genreProprietes}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Parking\r\n                </span>\r\n                <span>{property.stationnement === 0 ? \"yes\" : \"no\"}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Ziaway Estimation\r\n                </span>\r\n                <span>{property.ZiaEstimation}</span>\r\n              </div>\r\n              <div className=\"d-flex mb-2 \">\r\n                <span className=\"text-primary font-weight-bold mr-2 text-capitalize\">\r\n                  Customer Review\r\n                </span>\r\n                <span>{property.avisClient}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { SimpleCard } from \"@gull\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { StatusChange } from \"../../../redux/actions/leadActions\";\r\nimport { LeadView } from \"../leadview/LeadView\";\r\n\r\nimport { MdDesktopWindows } from \"react-icons/md\";\r\n\r\nimport \"firebase/firestore\";\r\nimport firebase from \"../../../services/firebase/firebase\";\r\n\r\nconst LeadsTwo = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [status, setStatus] = useState(null);\r\n  const [userID, setUserID] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useFirestoreConnect(\"leads\");\r\n  const leads = useSelector((state) => state.firestore.ordered.leads);\r\n  console.log(leads);\r\n  const getUserStatusClass = (status) => {\r\n    switch (status) {\r\n      case \"Accepted\":\r\n        return \"badge-success\";\r\n      case \"Rejected\":\r\n        return \"badge-danger\";\r\n      case \"pending\":\r\n        return \"badge-warning\";\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleChange = (id, value) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"leads\")\r\n      .doc(id)\r\n      .update({\r\n        lead_status: value,\r\n      })\r\n      .then(() => {\r\n        console.log(\"updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"something went wrong\", err);\r\n      });\r\n    // dispatch(StatusChange(id, value));\r\n    // NotificationManager.success(\"Updated\", { value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} centered size=\"lg\" scrollable>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Lead View</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <LeadView userId={userID} />\r\n        </Modal.Body>\r\n      </Modal>\r\n      <SimpleCard className=\"h-100\">\r\n        <div className=\"table-responsive h-100 position-relative\">\r\n          <table\r\n            id=\"user_table\"\r\n            className=\"table table-hover table-striped table-gray-200\"\r\n          >\r\n            <thead className=\"bg-primary text-white\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Owner</th>\r\n                <th scope=\"col\">This property is</th>\r\n                <th scope=\"col\">Project progress</th>\r\n                <th scope=\"col\" className=\"text-center\">\r\n                  View\r\n                </th>\r\n                <th scope=\"col\">Status</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {leads === undefined ? (\r\n              <div className=\"position-absolute w-100 h-75 px-0 d-flex justify-content-center align-items-center\">\r\n                <div className=\"spinner-bubble spinner-bubble-primary m-5\"></div>\r\n              </div>\r\n            ) : (\r\n              <tbody>\r\n                {leads\r\n                  .filter((lead) => lead.lead_status === \"Accepted\")\r\n                  .map((lead, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td>{lead.lead_type}</td>\r\n\r\n                      <td>{lead.user_name}</td>\r\n\r\n                      <td>{}</td>\r\n                      <td>{}</td>\r\n                      <td className=\"text-center\">\r\n                        <Button\r\n                          variant=\"icon\"\r\n                          onClick={() => {\r\n                            handleShow();\r\n                            setUserID(lead.userID);\r\n                          }}\r\n                        >\r\n                          <MdDesktopWindows\r\n                            size={16}\r\n                            className=\"text-primary\"\r\n                          />\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        <span\r\n                          className={`badge p-2 text-white ${getUserStatusClass(\r\n                            lead.lead_status\r\n                          )}`}\r\n                        >\r\n                          {lead.lead_status}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n      </SimpleCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeadsTwo;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { SimpleCard } from \"@gull\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\n// import { StatusChange } from \"../../../redux/actions/leadActions\";\r\n\r\nimport { RiExchangeLine } from \"react-icons/ri\";\r\n\r\nimport \"firebase/firestore\";\r\nimport firebase from \"../../../services/firebase/firebase\";\r\n\r\nconst LeadsThree = () => {\r\n  const [accept, setAccept] = useState(false);\r\n  const [decline, setDecline] = useState(false);\r\n  const [status, setStatus] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useFirestoreConnect(\"leads\");\r\n  const leads = useSelector((state) => state.firestore.ordered.leads);\r\n\r\n  const getUserStatusClass = (status) => {\r\n    switch (status) {\r\n      case \"Accepted\":\r\n        return \"badge-success\";\r\n      case \"Rejected\":\r\n        return \"badge-danger\";\r\n      case \"Replacement\":\r\n        return \"badge-warning\";\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleChange = (id, value) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"leads\")\r\n      .doc(id)\r\n      .update({\r\n        lead_status: value,\r\n      })\r\n      .then(() => {\r\n        console.log(\"updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"something went wrong\", err);\r\n      });\r\n    // dispatch(StatusChange(id, value));\r\n    // NotificationManager.success(\"Updated\", { value });\r\n  };\r\n\r\n  return (\r\n    <SimpleCard className=\"h-100\">\r\n      <div className=\"table-responsive h-100 position-relative\">\r\n        <table\r\n          id=\"user_table\"\r\n          className=\"table table-hover table-striped table-gray-200\"\r\n        >\r\n          <thead className=\"bg-primary text-white\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Type</th>\r\n              <th scope=\"col\">Owner</th>\r\n              <th scope=\"col\">This property is</th>\r\n              <th scope=\"col\">Project progress</th>\r\n              <th scope=\"col\">Action</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {leads === undefined ? (\r\n            <div className=\"position-absolute w-100 h-75 px-0 d-flex justify-content-center align-items-center\">\r\n              <div className=\"spinner-bubble spinner-bubble-primary m-5\"></div>\r\n            </div>\r\n          ) : (\r\n            <tbody>\r\n              {leads\r\n                .filter(\r\n                  (lead) =>\r\n                    lead.lead_status === \"Accepted\" ||\r\n                    lead.lead_status === \"Replacement\"\r\n                )\r\n                .map((lead, index) => (\r\n                  <tr key={index}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{lead.lead_type}</td>\r\n\r\n                    <td>{lead.user_name}</td>\r\n\r\n                    <td>{}</td>\r\n                    <td>{}</td>\r\n                    <td>\r\n                      {/* <span className='cursor-pointer text-success mr-2'>\r\n                    <i className='nav-icon i-Pen-2 font-weight-bold'></i>\r\n                  </span>\r\n                  <span className='cursor-pointer text-danger mr-2'>\r\n                    <i className='nav-icon i-Close-Window font-weight-bold'></i>\r\n                  </span> */}\r\n                      <Dropdown>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <Dropdown.Toggle\r\n                            className={\r\n                              accept\r\n                                ? `toggle-hidden border-0 p-0 bg-transparent text-success`\r\n                                : decline\r\n                                ? \"toggle-hidden border-0 p-0 bg-transparent text-danger\"\r\n                                : \"toggle-hidden border-0 p-0 bg-transparent text-primary text-primary ml-3\"\r\n                            }\r\n                          >\r\n                            <RiExchangeLine size={16} />\r\n                          </Dropdown.Toggle>\r\n                          {lead.lead_status === \"Accepted\" ? (\r\n                            <span className=\"ml-2 badge badge-success p-1\">\r\n                              {lead.lead_status}\r\n                            </span>\r\n                          ) : lead.lead_status === \"Rejected\" ? (\r\n                            <span className=\"ml-2 badge badge-danger p-1\">\r\n                              {lead.lead_status}\r\n                            </span>\r\n                          ) : (\r\n                            <span className=\"ml-2 badge text-white badge-warning p-1\">\r\n                              {lead.lead_status}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n\r\n                        <Dropdown.Menu className=\"p-0\">\r\n                          <Dropdown.Item\r\n                            className=\"bg-warning text-white\"\r\n                            eventKey=\"2\"\r\n                            onClick={() => {\r\n                              setStatus(\"Replacement\");\r\n                              handleChange(lead.id, \"Replacement\");\r\n                            }}\r\n                          >\r\n                            <small>Replace Lead</small>\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <span\r\n                        className={`badge p-2 text-white ${getUserStatusClass(\r\n                          lead.lead_status\r\n                        )}`}\r\n                      >\r\n                        {lead.lead_status}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </SimpleCard>\r\n  );\r\n};\r\n\r\nexport default LeadsThree;\r\n","import React from \"react\";\r\nimport { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport { SimpleCard } from \"@gull\";\r\nimport LeadsOne from \"./leadsComponents/LeadsOne\";\r\nimport LeadsTwo from \"./leadsComponents/LeadsTwo\";\r\nimport LeadsThree from \"./leadsComponents/LeadsThree\";\r\n\r\nconst Leads = () => {\r\n  return (\r\n    <section className=\"mx-1 mx-lg-2 vh-100 \">\r\n      <div className=\"mb-4 main-height\">\r\n        <Row className=\"mx-0 h-100\">\r\n          <Col xs={12} className=\"mb-4 h-100\">\r\n            <SimpleCard className=\"h-100\">\r\n              <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <div className=\"row h-100\">\r\n                  <div className=\"col-md-3 col-lg-2\">\r\n                    <Nav variant=\"pills-2\" className=\"d-flex flex-column\">\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"first\">Leads</Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"two\">Accepted Leads</Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"three\">Leads Replacement</Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </div>\r\n                  <div className=\"h-100 scroll-box col card p-0 mx-3\">\r\n                    <Tab.Content className=\"p-0 h-100\">\r\n                      <Tab.Pane className=\"h-100\" eventKey=\"first\">\r\n                        <LeadsOne />\r\n                      </Tab.Pane>\r\n                      <Tab.Pane className=\"h-100\" eventKey=\"two\">\r\n                        <LeadsTwo />\r\n                      </Tab.Pane>\r\n                      <Tab.Pane className=\"h-100\" eventKey=\"three\">\r\n                        <LeadsThree />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </div>\r\n                </div>\r\n              </Tab.Container>\r\n            </SimpleCard>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Leads;\r\n"],"sourceRoot":""}