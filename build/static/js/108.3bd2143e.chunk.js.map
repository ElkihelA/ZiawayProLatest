{"version":3,"sources":["app/views/forms/FormValidation.jsx"],"names":["FormValidation","state","firstName","lastName","phone","username","city","cardNumber","password","repassword","zip","agree","checkbox1","checkbox2","radio","range","startDate","Date","endDate","date","setDate","getDate","handleSubmit","values","setSubmitting","console","log","routeSegments","name","path","className","initialValues","this","validationSchema","basicFormSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","noValidate","classList","htmlFor","type","id","placeholder","value","onChange","onBlur","required","aria-describedby","length","checked","Component","yup","shape"],"mappings":"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","file":"static/js/108.3bd2143e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { classList } from \"@utils\";\r\n\r\nclass FormValidation extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    username: \"\",\r\n    city: \"\",\r\n    cardNumber: \"4444444444444444\",\r\n    state: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n    zip: \"\",\r\n    agree: [], //returns ['on'] when on/checked\r\n    checkbox1: \"\",\r\n    checkbox2: \"\",\r\n    radio: \"\",\r\n    range: {\r\n      startDate: new Date(),\r\n      endDate: (() => {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() + 7);\r\n        return date;\r\n      })()\r\n    }\r\n  };\r\n\r\n  handleSubmit = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Forms\", path: \"/forms\" },\r\n            { name: \"Form Validation\" }\r\n          ]}\r\n        ></Breadcrumb>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <p>\r\n              For custom Bootstrap form validation messages, you’ll need to add\r\n              the <code>novalidate</code> boolean attribute to your\r\n              <code>form</code>. This disables the browser default feedback\r\n              tooltips, but still provides access to the form validation APIs in\r\n              JavaScript. Try to submit the form below; our JavaScript will\r\n              intercept the submit button and relay feedback to you. When\r\n              attempting to submit, you’ll see the <code>:invalid</code> and\r\n              <code>:valid</code> styles applied to your form controls.\r\n            </p>\r\n            <div className=\"card mb-4\">\r\n              <div className=\"card-body\">\r\n                <Formik\r\n                  initialValues={this.state}\r\n                  validationSchema={basicFormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting\r\n                  }) => {\r\n                    return (\r\n                      <form\r\n                        className=\"needs-validation\"\r\n                        onSubmit={handleSubmit}\r\n                        noValidate\r\n                      >\r\n                        <div className=\"form-row\">\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                !errors.firstName && touched.firstName,\r\n                              \"invalid-field\":\r\n                                errors.firstName && touched.firstName\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom202\">\r\n                              First name\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom202\"\r\n                              placeholder=\"First name\"\r\n                              name=\"firstName\"\r\n                              value={values.firstName}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                            <div className=\"invalid-feedback\">\r\n                              First name is required\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                touched.lastName && !errors.lastName,\r\n                              \"invalid-field\":\r\n                                touched.lastName && errors.lastName\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom222\">\r\n                              Last name\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom222\"\r\n                              placeholder=\"Last name\"\r\n                              value={values.lastName}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              name=\"lastName\"\r\n                              required\r\n                            />\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                            <div className=\"invalid-feedback\">\r\n                              Last name is required\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                touched.username && !errors.username,\r\n                              \"invalid-field\":\r\n                                touched.username && errors.username\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustomUsername\">\r\n                              Username\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <span\r\n                                  className=\"input-group-text\"\r\n                                  id=\"inputGroupPrepend\"\r\n                                >\r\n                                  @\r\n                                </span>\r\n                              </div>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"validationCustomUsername\"\r\n                                placeholder=\"Username\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                name=\"username\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.username}\r\n                                required\r\n                              />\r\n                              <div className=\"invalid-feedback\">\r\n                                Please choose a username.\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.city && !errors.city,\r\n                              \"invalid-field\": touched.city && errors.city\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom03\">City</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom03\"\r\n                              placeholder=\"City\"\r\n                              name=\"city\"\r\n                              value={values.city}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid city.\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.state && !errors.state,\r\n                              \"invalid-field\": touched.state && errors.state\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom204\">State</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom204\"\r\n                              placeholder=\"State\"\r\n                              name=\"state\"\r\n                              value={values.state}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid state.\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.zip && !errors.zip,\r\n                              \"invalid-field\": touched.zip && errors.zip\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom05\">Zip</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom05\"\r\n                              placeholder=\"Zip\"\r\n                              name=\"zip\"\r\n                              value={values.zip}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid zip.\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className={classList({\r\n                            \"col-md-4 mb-3\": true,\r\n                            \"valid-field\":\r\n                              touched.agree &&\r\n                              !errors.agree &&\r\n                              values.agree.length,\r\n                            \"invalid-field\":\r\n                              touched.agree &&\r\n                              errors.agree &&\r\n                              !values.agree.length\r\n                          })}\r\n                        >\r\n                          <label className=\"checkbox checkbox-primary\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              name=\"agree\"\r\n                              value={values.agree}\r\n                              checked={values.agree.length}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <span>Agree to terms and conditions</span>\r\n                            <span className=\"checkmark\"></span>\r\n                          </label>\r\n\r\n                          <div className=\"invalid-feedback\">\r\n                            You must agree before submitting.\r\n                          </div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Submit form\r\n                        </button>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"card-title\">Tooltip message</div>\r\n                <Formik\r\n                  initialValues={this.state}\r\n                  validationSchema={basicFormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting\r\n                  }) => {\r\n                    return (\r\n                      <form\r\n                        className=\"needs-validation\"\r\n                        onSubmit={handleSubmit}\r\n                        noValidate\r\n                      >\r\n                        <div className=\"form-row\">\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                !errors.firstName && touched.firstName,\r\n                              \"invalid-field\":\r\n                                errors.firstName && touched.firstName\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom01\">\r\n                              First name\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom01\"\r\n                              placeholder=\"First name\"\r\n                              name=\"firstName\"\r\n                              value={values.firstName}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"valid-tooltip\">Looks good!</div>\r\n                            <div className=\"invalid-tooltip\">\r\n                              First name is required\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                touched.lastName && !errors.lastName,\r\n                              \"invalid-field\":\r\n                                touched.lastName && errors.lastName\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom02\">\r\n                              Last name\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom02\"\r\n                              placeholder=\"Last name\"\r\n                              value={values.lastName}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              name=\"lastName\"\r\n                              required\r\n                            />\r\n                            <div className=\"valid-tooltip\">Looks good!</div>\r\n                            <div className=\"invalid-tooltip\">\r\n                              Last name is required\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\":\r\n                                touched.username && !errors.username,\r\n                              \"invalid-field\":\r\n                                touched.username && errors.username\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustomUsername1\">\r\n                              Username\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                <span\r\n                                  className=\"input-group-text\"\r\n                                  id=\"inputGroupPrepend\"\r\n                                >\r\n                                  @\r\n                                </span>\r\n                              </div>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"validationCustomUsername1\"\r\n                                placeholder=\"Username\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                name=\"username\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.username}\r\n                                required\r\n                              />\r\n                              <div className=\"invalid-tooltip\">\r\n                                Please choose a username.\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.city && !errors.city,\r\n                              \"invalid-field\": touched.city && errors.city\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom203\">City</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom203\"\r\n                              placeholder=\"City\"\r\n                              name=\"city\"\r\n                              value={values.city}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-tooltip\">\r\n                              Please provide a valid city.\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.state && !errors.state,\r\n                              \"invalid-field\": touched.state && errors.state\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom04\">State</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom04\"\r\n                              placeholder=\"State\"\r\n                              name=\"state\"\r\n                              value={values.state}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-tooltip\">\r\n                              Please provide a valid state.\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"col-md-4 mb-3\": true,\r\n                              \"valid-field\": touched.zip && !errors.zip,\r\n                              \"invalid-field\": touched.zip && errors.zip\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"validationCustom205\">Zip</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control\"\r\n                              id=\"validationCustom205\"\r\n                              placeholder=\"Zip\"\r\n                              name=\"zip\"\r\n                              value={values.zip}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <div className=\"invalid-tooltip\">\r\n                              Please provide a valid zip.\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          className={classList({\r\n                            \"col-md-4 mb-3\": true,\r\n                            \"valid-field\":\r\n                              touched.agree &&\r\n                              !errors.agree &&\r\n                              values.agree.length,\r\n                            \"invalid-field\":\r\n                              touched.agree &&\r\n                              errors.agree &&\r\n                              !values.agree.length\r\n                          })}\r\n                        >\r\n                          <label className=\"checkbox checkbox-primary\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              name=\"agree\"\r\n                              value={values.agree}\r\n                              checked={values.agree.length}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              required\r\n                            />\r\n                            <span>Agree to terms and conditions</span>\r\n                            <span className=\"checkmark\"></span>\r\n                          </label>\r\n\r\n                          <div className=\"invalid-tooltip\">\r\n                            You must agree before submitting.\r\n                          </div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Submit form\r\n                        </button>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst basicFormSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"first name is required\"),\r\n  lastName: yup.string().required(\"last name is required\"),\r\n  username: yup.string().required(\"select any option\"),\r\n  city: yup.string().required(\"birthDay is required\"),\r\n  zip: yup.number().required(\"email is required\"),\r\n  agree: yup.string().required(\"Required\"),\r\n  state: yup.string().required(\"Required\")\r\n});\r\n\r\nconst tooltipFormSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"first name is required\"),\r\n  lastName: yup.string().required(\"last name is required\"),\r\n  username: yup.string().required(\"select any option\"),\r\n  city: yup.string().required(\"birthDay is required\"),\r\n  zip: yup.number().required(\"email is required\"),\r\n  agree: yup.string().required(\"Required\"),\r\n  state: yup.string().required(\"Required\")\r\n});\r\n\r\nexport default FormValidation;\r\n"],"sourceRoot":""}