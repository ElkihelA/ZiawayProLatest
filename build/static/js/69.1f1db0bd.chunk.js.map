{"version":3,"sources":["app/GullLayout/Layout3/Layout3Header.jsx","app/GullLayout/Layout3/Layout3.jsx"],"names":["Layout3Header","state","shorcutMenuList","icon","link","text","notificationList","title","description","time","color","status","handleMenuClick","props","setLayoutSettings","settings","merge","layout3Settings","leftSidebar","open","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","this","className","src","alt","onClick","Dropdown","Toggle","variant","id","Menu","MegaMenu","type","placeholder","onFocus","style","margin","data-fullscreen","role","map","menu","key","to","data-toggle","DropdownMenu","note","index","getTimeDifference","Date","DropdownToggle","aria-haspopup","aria-expanded","logoutUser","classList","navigations","parent","htmlFor","name","sub","path","child","i","Component","withRouter","connect","PropTypes","func","isRequired","layout","Layout3","handleSearchBoxClose","routes","renderRoutes","Footer","GullSearch","handleClose"],"mappings":"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","file":"static/js/69.1f1db0bd.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport { getTimeDifference, classList } from \"@utils\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport { merge } from \"lodash\";\r\nimport { navigations } from \"app/navigations\";\r\nimport ScrollBar from \"react-perfect-scrollbar\";\r\nimport MegaMenu from \"@gull/components/MegaMenu\";\r\n\r\nclass Layout3Header extends Component {\r\n  state = {\r\n    shorcutMenuList: [\r\n      {\r\n        icon: \"i-Shop-4\",\r\n        link: \"#\",\r\n        text: \"Home\"\r\n      },\r\n      {\r\n        icon: \"i-Library\",\r\n        link: \"#\",\r\n        text: \"Ui Kits\"\r\n      },\r\n      {\r\n        icon: \"i-Drop\",\r\n        link: \"#\",\r\n        text: \"Apps\"\r\n      },\r\n      {\r\n        icon: \"i-File-Clipboard-File--Text\",\r\n        link: \"#\",\r\n        text: \"Form\"\r\n      },\r\n      {\r\n        icon: \"i-Checked-User\",\r\n        link: \"#\",\r\n        text: \"Sessions\"\r\n      },\r\n      {\r\n        icon: \"i-Ambulance\",\r\n        link: \"#\",\r\n        text: \"Support\"\r\n      }\r\n    ],\r\n    notificationList: [\r\n      {\r\n        icon: \"i-Speach-Bubble-6\",\r\n        title: \"New message\",\r\n        description: \"James: Hey! are you busy?\",\r\n        time: \"2019-10-30T02:10:18.931Z\",\r\n        color: \"primary\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Receipt-3\",\r\n        title: \"New order received\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Empty-Box\",\r\n        title: \"Product out of stock\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-05-10T02:10:18.931Z\",\r\n        color: \"danger\",\r\n        status: \"3\"\r\n      },\r\n      {\r\n        icon: \"i-Data-Power\",\r\n        title: \"Server up!\",\r\n        description: \"Server rebooted successfully\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"3\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout3Settings: {\r\n          leftSidebar: {\r\n            open: !settings.layout3Settings.leftSidebar.open\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    if (document.fullscreenEnabled) {\r\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\r\n      else document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  handleSearchBoxOpen = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout3Settings: {\r\n          searchBox: {\r\n            open: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\r\n    let { settings } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"main-header\">\r\n          <div className=\"logo\">\r\n            <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n\r\n          <div className=\"d-none d-lg-flex align-items-center\">\r\n            <Dropdown className=\"mr-3\">\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                Mega Menu\r\n              </Dropdown.Toggle>\r\n\r\n              <div className=\"mega-menu\">\r\n                <Dropdown.Menu>\r\n                  <MegaMenu></MegaMenu>\r\n                </Dropdown.Menu>\r\n              </div>\r\n            </Dropdown>\r\n\r\n            <div className=\"search-bar\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onFocus={this.handleSearchBoxOpen}\r\n              />\r\n              <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ margin: \"auto\" }}></div>\r\n\r\n          <div className=\"header-part-right\">\r\n            <i\r\n              className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\r\n              data-fullscreen\r\n              onClick={this.toggleFullScreen}\r\n            ></i>\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\r\n                <i\r\n                  className=\"i-Safe-Box text-muted header-icon\"\r\n                  role=\"button\"\r\n                ></i>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <div className=\"menu-icon-grid\">\r\n                  {shorcutMenuList.map(menu => (\r\n                    <Link key={menu.text} to={menu.link}>\r\n                      <i className={menu.icon}></i> {menu.text}\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\r\n                <div\r\n                  className=\"badge-top-container\"\r\n                  role=\"button\"\r\n                  id=\"dropdownNotification\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <span className=\"badge badge-primary\">3</span>\r\n                  <i className=\"i-Bell text-muted header-icon\"></i>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n\r\n              <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\r\n                {notificationList.map((note, index) => (\r\n                  <div key={index} className=\"dropdown-item d-flex\">\r\n                    <div className=\"notification-icon\">\r\n                      <i className={`${note.icon} text-${note.color} mr-1`}></i>\r\n                    </div>\r\n                    <div className=\"notification-details flex-grow-1\">\r\n                      <p className=\"m-0 d-flex align-items-center\">\r\n                        <span>{note.title}</span>\r\n                        <span\r\n                          className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\r\n                        >\r\n                          {note.status}\r\n                        </span>\r\n                        <span className=\"flex-grow-1\"></span>\r\n                        <span className=\"text-small text-muted ml-auto\">\r\n                          {getTimeDifference(new Date(note.time))} ago\r\n                        </span>\r\n                      </p>\r\n                      <p className=\"text-small text-muted m-0\">\r\n                        {note.description}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n\r\n            <div className=\"user col align-self-end\">\r\n              <Dropdown>\r\n                <DropdownToggle variant=\"link\" className=\"toggle-hidden\">\r\n                  <img\r\n                    src=\"/assets/images/faces/1.jpg\"\r\n                    id=\"userDropdown\"\r\n                    alt=\"\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  />\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <div className=\"dropdown-header\">\r\n                    <i className=\"i-Lock-User mr-1\"></i> Timothy Carlson\r\n                  </div>\r\n                  <span className=\"dropdown-item cursor-pointer\">\r\n                    Account settings\r\n                  </span>\r\n                  <span className=\"dropdown-item cursor-pointer\">\r\n                    Billing history\r\n                  </span>\r\n                  <span\r\n                    className=\"dropdown-item cursor-pointer\"\r\n                    onClick={this.props.logoutUser}\r\n                  >\r\n                    Sign out\r\n                  </span>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"horizontal-bar-wrap\">\r\n          <div\r\n            className={classList({\r\n              \"header-topnav\": true,\r\n              open: settings.layout3Settings.leftSidebar.open\r\n            })}\r\n          >\r\n            <div className=\"container-fluid\">\r\n              <ScrollBar className=\"topnav position-relative rtl-ps-none\">\r\n                <ul className=\"menu float-left\">\r\n                  {navigations.map((parent, index) => (\r\n                    <li key={index}>\r\n                      <div>\r\n                        <div>\r\n                          <label className=\"toggle\" htmlFor={`drop-${index}`}>\r\n                            {parent.name}\r\n                          </label>\r\n                          <Link to={!parent.sub ? parent.path : \"#\"}>\r\n                            <i className={`nav-icon mr-2 ${parent.icon}`}></i>\r\n                            {parent.name}\r\n                          </Link>\r\n                          <input type=\"checkbox\" id={`drop-${index}`} />\r\n                          <ul>\r\n                            {parent.sub &&\r\n                              parent.sub.map((child, i) => (\r\n                                <li key={i}>\r\n                                  <Link to={child.path || \"#\"}>\r\n                                    <i\r\n                                      className={`nav-icon mr-2 ${child.icon}`}\r\n                                    ></i>\r\n                                    <span className=\"item-name\">\r\n                                      {child.name}\r\n                                    </span>\r\n                                  </Link>\r\n                                </li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </ScrollBar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLayout3Header.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings\r\n  })(Layout3Header)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { renderRoutes } from \"react-router-config\";\r\n\r\nimport Footer from \"../SharedComponents/Footer\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { merge } from \"lodash\";\r\nimport { classList } from \"@utils\";\r\nimport Layout3Header from \"./Layout3Header\";\r\nimport GullSearch from \"@gull/components/GullSearch\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\n\r\nclass Layout3 extends Component {\r\n  state = {};\r\n\r\n  handleSearchBoxClose = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout3Settings: {\r\n          searchBox: {\r\n            open: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { settings, routes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"app-admin-wrap  layout-horizontal-bar\">\r\n          <Layout3Header></Layout3Header>\r\n\r\n          <div\r\n            className={classList({\r\n              \"main-content-wrap d-flex flex-column\": true\r\n            })}\r\n          >\r\n            <div className=\"main-content\">{renderRoutes(routes)}</div>\r\n\r\n            <Footer></Footer>\r\n          </div>\r\n        </div>\r\n        <GullSearch\r\n          open={settings.layout3Settings.searchBox.open}\r\n          handleClose={this.handleSearchBoxClose}\r\n        ></GullSearch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setLayoutSettings }\r\n)(Layout3);\r\n"],"sourceRoot":""}