{"version":3,"sources":["app/views/app/contact/contactService.js","app/views/app/contact/ContactEditor2.jsx","app/views/app/contact/ContactList.jsx"],"names":["getAllUser","axios","get","deleteUser","User","post","addNewUser","updateUser","contactSchema","yup","shape","name","required","email","phone","age","balance","bd","role","ContactEditor2","show","initialValues","toggleEditorDialog","handleFormSubmit","Modal","onHide","centered","className","id","type","aria-label","onClick","aria-hidden","note","Date","validationSchema","enableReinitialize","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","Form","Row","FormLabel","column","sm","FormControl","placeholder","onChange","onBlur","isInvalid","value","dateFormat","selected","date","checked","match","htmlFor","ContactList","state","rowsPerPage","page","userList","showEditorDialog","searchQuery","dialogValues","updatePageData","then","data","setState","handleSearch","target","handlePageClick","arg","toString","handleEditContact","handleDeleteContact","swal","fire","title","text","icon","timer","a","console","log","res","getBadgeColor","this","filter","user","toLowerCase","routeSegments","path","aria-controls","slice","map","ind","key","valign","to","src","imgUrl","alt","format","getTime","size","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Component"],"mappings":"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","file":"static/js/48.df9b3fc0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllUser = () => {\r\n  return axios.get(\"/api/user/all\");\r\n};\r\nexport const getUserById = id => {\r\n  return axios.get(\"/api/user\", { data: id });\r\n};\r\nexport const deleteUser = User => {\r\n  return axios.post(\"/api/user/delete\", User);\r\n};\r\nexport const addNewUser = User => {\r\n  return axios.post(\"/api/user/add\", User);\r\n};\r\nexport const updateUser = User => {\r\n  return axios.post(\"/api/user/update\", User);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  FormGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  Row,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst ContactEditor2 = ({\r\n  show,\r\n  initialValues,\r\n  toggleEditorDialog,\r\n  handleFormSubmit\r\n}) => {\r\n  return (\r\n    <Modal show={show} onHide={toggleEditorDialog} centered>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          {initialValues ? \"Update\" : \"New\"} Contact\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n          onClick={() => toggleEditorDialog(false)}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <Formik\r\n          initialValues={\r\n            initialValues\r\n              ? initialValues\r\n              : {\r\n                  name: \"\",\r\n                  email: \"\",\r\n                  phone: \"\",\r\n                  note: \"\",\r\n                  age: \"\",\r\n                  balance: \"\",\r\n                  bd: new Date(),\r\n                  role: \"developer\"\r\n                }\r\n          }\r\n          validationSchema={contactSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            setFieldValue\r\n          }) => (\r\n            <form onSubmit={handleSubmit} className=\"position-relative\">\r\n              <Form.Row className=\"mb-3\">\r\n                <FormLabel column sm={2}>\r\n                  Name\r\n                </FormLabel>\r\n                <FormControl\r\n                  className=\"col-sm-10\"\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={errors.name && touched.name}\r\n                  value={values.name}\r\n                ></FormControl>\r\n              </Form.Row>\r\n              <Form.Row className=\"mb-3\">\r\n                <FormLabel column sm={2}>\r\n                  Email\r\n                </FormLabel>\r\n                <FormControl\r\n                  className=\"col-sm-10\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={errors.email && touched.email}\r\n                  value={values.email}\r\n                ></FormControl>\r\n              </Form.Row>\r\n              <Form.Row className=\"mb-3\">\r\n                <FormLabel column sm={2}>\r\n                  Phone\r\n                </FormLabel>\r\n                <FormControl\r\n                  className=\"col-sm-10\"\r\n                  placeholder=\"Phone\"\r\n                  name=\"phone\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={errors.phone && touched.phone}\r\n                  value={values.phone}\r\n                ></FormControl>\r\n              </Form.Row>\r\n              <Form.Row className=\"mb-3\">\r\n                <FormLabel column sm={2}>\r\n                  Age\r\n                </FormLabel>\r\n                <FormControl\r\n                  className=\"col-sm-10\"\r\n                  placeholder=\"Age\"\r\n                  name=\"age\"\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={errors.age && touched.age}\r\n                  value={values.age}\r\n                ></FormControl>\r\n              </Form.Row>\r\n              <Form.Row className=\"mb-3\">\r\n                <FormLabel column sm={2}>\r\n                  Balance\r\n                </FormLabel>\r\n                <FormControl\r\n                  className=\"col-sm-10\"\r\n                  placeholder=\"$1230\"\r\n                  name=\"balance\"\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={errors.balance && touched.balance}\r\n                  value={values.balance}\r\n                ></FormControl>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <FormLabel column sm={2}>\r\n                  Join\r\n                </FormLabel>\r\n                ``\r\n                <DatePicker\r\n                  className=\"form-control mb-3\"\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  selected={new Date(values.bd)}\r\n                  onChange={date => {\r\n                    setFieldValue(\"bd\", date);\r\n                  }}\r\n                />\r\n              </Form.Row>\r\n\r\n              <fieldset className=\"form-group\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-form-label col-sm-2 pt-0\">Role</div>\r\n                  <div className=\"col-sm-10\">\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"role\"\r\n                        value=\"developer\"\r\n                        onChange={handleChange}\r\n                        checked={\"developer\".match(values.role)}\r\n                        id=\"developer\"\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label ml-3\"\r\n                        htmlFor=\"developer\"\r\n                      >\r\n                        Developer\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"role\"\r\n                        value=\"designer\"\r\n                        onChange={handleChange}\r\n                        checked={\"designer\".match(values.role)}\r\n                        id=\"designer\"\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label ml-3\"\r\n                        htmlFor=\"designer\"\r\n                      >\r\n                        Designer\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"role\"\r\n                        value=\"manager\"\r\n                        onChange={handleChange}\r\n                        checked={\"manager\".match(values.role)}\r\n                        id=\"manager\"\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label ml-3\"\r\n                        htmlFor=\"manager\"\r\n                      >\r\n                        Manager\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-sm-10\">\r\n                  <button type=\"submit\" className=\"btn btn-success\">\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst contactSchema = yup.object().shape({\r\n  name: yup.string().required(\"title is required\"),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(\"note is required\"),\r\n  phone: yup.string().required(\"note is required\"),\r\n  age: yup.number().required(\"note is required\"),\r\n  balance: yup.number().required(\"note is required\"),\r\n  bd: yup.string().required(\"note is required\"),\r\n  role: yup.string().required(\"note is required\")\r\n});\r\n\r\nexport default ContactEditor2;\r\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport swal from \"sweetalert2\";\r\nimport { format } from \"date-fns\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  getAllUser,\r\n  deleteUser,\r\n  addNewUser,\r\n  updateUser\r\n} from \"./contactService\";\r\nimport ContactEditor2 from \"./ContactEditor2\";\r\n\r\nclass ContactList extends Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    userList: [],\r\n    showEditorDialog: false,\r\n    searchQuery: \"\",\r\n    dialogValues: null\r\n  };\r\n\r\n  updatePageData = () => {\r\n    getAllUser().then(({ data }) => this.setState({ userList: [...data] }));\r\n  };\r\n\r\n  handleSearch = ({ target: { value } }) => {\r\n    this.setState({ searchQuery: value });\r\n  };\r\n\r\n  handlePageClick = data => {\r\n    let page = data.selected;\r\n    this.setState({ page });\r\n  };\r\n\r\n  toggleEditorDialog = arg => {\r\n    if (arg && arg.toString())\r\n      this.setState({ showEditorDialog: arg, dialogValues: null });\r\n    else\r\n      this.setState({\r\n        showEditorDialog: !this.state.showEditorDialog,\r\n        dialogValues: null\r\n      });\r\n  };\r\n\r\n  handleEditContact = dialogValues => {\r\n    this.setState({ dialogValues, showEditorDialog: true });\r\n  };\r\n\r\n  handleDeleteContact = values => {\r\n    deleteUser(values).then(({ data: userList }) => {\r\n      this.setState({ userList });\r\n      swal.fire({\r\n        title: \"Deleted!\",\r\n        text: \"Your file has been deleted.\",\r\n        type: \"success\",\r\n        icon: \"success\",\r\n        timer: 1500\r\n      });\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = async values => {\r\n    console.log(values);\r\n\r\n    let { dialogValues } = this.state;\r\n    let res;\r\n    if (!dialogValues) {\r\n      res = await addNewUser(values);\r\n    } else {\r\n      res = await updateUser({ ...dialogValues, ...values });\r\n    }\r\n    this.setState({ userList: res.data });\r\n    this.toggleEditorDialog(false);\r\n  };\r\n\r\n  getBadgeColor = role => {\r\n    switch (role) {\r\n      case \"developer\":\r\n        return \"primary\";\r\n\r\n      case \"manager\":\r\n        return \"success\";\r\n\r\n      case \"designer\":\r\n        return \"warning\";\r\n\r\n      default:\r\n        return \"primary\";\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      rowsPerPage,\r\n      page,\r\n      userList = [],\r\n      dialogValues,\r\n      searchQuery,\r\n      showEditorDialog\r\n    } = this.state;\r\n\r\n    userList = userList.filter(user =>\r\n      user.name.toLowerCase().match(searchQuery.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Home\", path: \"/\" },\r\n            { name: \"Contact\", path: \"/contact\" },\r\n            { name: \"Contact List\" }\r\n          ]}\r\n        ></Breadcrumb>\r\n\r\n        <section className=\"contact-list\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mb-4\">\r\n              <div className=\"card text-left\">\r\n                <div className=\"card-header text-right bg-transparent\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-md m-1\"\r\n                    onClick={this.toggleEditorDialog}\r\n                  >\r\n                    <i className=\"i-Add-User text-white mr-2\"></i> Add Contact\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row px-4 mt-3\">\r\n                  <div className=\"col-sm-12 col-md-6 mb-2\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <span className=\"mr-1\">Show</span>\r\n                      <div className=\"mr-1\">\r\n                        <select\r\n                          className=\"form-control\"\r\n                          onChange={({ target: { value } }) => {\r\n                            this.setState({ rowsPerPage: value });\r\n                          }}\r\n                        >\r\n                          <option value={10}>10</option>\r\n                          <option value={25}>25</option>\r\n                          <option value={50}>50</option>\r\n                          <option value={100}>100</option>\r\n                        </select>\r\n                      </div>\r\n                      <span>entries</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-6 mb-2\">\r\n                    <div className=\"d-flex justify-content-lg-end align-items-center\">\r\n                      <span className=\"mr-1\">Search:</span>\r\n                      <div className=\"mr-1\">\r\n                        <input\r\n                          type=\"search\"\r\n                          className=\"form-control form-control-sm\"\r\n                          placeholder=\"\"\r\n                          onChange={this.handleSearch}\r\n                          aria-controls=\"ul-contact-list\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"card-body pt-1\">\r\n                  <div className=\"table-responsive\">\r\n                    <table id=\"ul-contact-list\" className=\"display table w-100\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Name</th>\r\n                          <th>Email</th>\r\n                          <th>Phone</th>\r\n                          <th>Role</th>\r\n                          <th>Age</th>\r\n                          <th>Joining Date</th>\r\n                          <th>Salary</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {userList\r\n                          .slice(rowsPerPage * page, rowsPerPage * (page + 1))\r\n                          .map((user, ind) => (\r\n                            <tr key={ind}>\r\n                              <td valign=\"middle\">\r\n                                <Link to=\"\">\r\n                                  <div className=\"ul-widget-app__profile-pic\">\r\n                                    <img\r\n                                      className=\"profile-picture avatar-sm mb-2 rounded-circle img-fluid\"\r\n                                      src={user.imgUrl}\r\n                                      alt=\"\"\r\n                                    />\r\n                                    {user.name}\r\n                                  </div>\r\n                                </Link>\r\n                              </td>\r\n                              <td>{user.email}</td>\r\n                              <td>{user.phone}</td>\r\n                              <td valign=\"middle\">\r\n                                <div\r\n                                  className={`badge badge-${this.getBadgeColor(\r\n                                    user.role\r\n                                  )} p-2 text-capitalize`}\r\n                                >\r\n                                  {user.role ? user.role : \"Developer\"}\r\n                                </div>\r\n                              </td>\r\n                              <td>{user.age}</td>\r\n                              <td>\r\n                                {format(\r\n                                  new Date(\r\n                                    user.bd ? user.bd : new Date()\r\n                                  ).getTime(),\r\n                                  \"dd MMM, yyyy\"\r\n                                )}\r\n                              </td>\r\n                              <td>${user.balance}</td>\r\n                              <td>\r\n                                <div className=\"d-flex\">\r\n                                  <div className=\"cursor-pointer mr-3\">\r\n                                    <MdEdit\r\n                                      className=\"text-success\"\r\n                                      size={18}\r\n                                      onClick={() =>\r\n                                        this.handleEditContact(user)\r\n                                      }\r\n                                    ></MdEdit>\r\n                                  </div>\r\n                                  <div className=\"cursor-pointer\">\r\n                                    <MdDelete\r\n                                      className=\"text-danger\"\r\n                                      size={18}\r\n                                      onClick={() => {\r\n                                        swal\r\n                                          .fire({\r\n                                            title: \"Are you sure?\",\r\n                                            text:\r\n                                              \"You won't be able to revert this!\",\r\n                                            icon: \"warning\",\r\n                                            type: \"question\",\r\n                                            showCancelButton: true,\r\n                                            confirmButtonColor: \"#3085d6\",\r\n                                            cancelButtonColor: \"#d33\",\r\n                                            confirmButtonText:\r\n                                              \"Yes, delete it!\",\r\n                                            cancelButtonText: \"No\"\r\n                                          })\r\n                                          .then(result => {\r\n                                            if (result.value) {\r\n                                              this.handleDeleteContact(user);\r\n                                            } else {\r\n                                              swal.fire({\r\n                                                title: \"Cancelled!\",\r\n                                                text: \"Permission denied.\",\r\n                                                type: \"error\",\r\n                                                icon: \"error\",\r\n                                                timer: 1500\r\n                                              });\r\n                                            }\r\n                                          });\r\n                                      }}\r\n                                    ></MdDelete>\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end mr-lg-4\">\r\n                    <ReactPaginate\r\n                      previousLabel={\"Previous\"}\r\n                      nextLabel={\"Next\"}\r\n                      breakLabel={\"...\"}\r\n                      breakClassName={\"break-me\"}\r\n                      pageCount={Math.ceil(userList.length / rowsPerPage)}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={3}\r\n                      onPageChange={this.handlePageClick}\r\n                      containerClassName={\"pagination pagination-lg\"}\r\n                      subContainerClassName={\"pages pagination\"}\r\n                      activeClassName={\"active\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <ContactEditor2\r\n          show={showEditorDialog}\r\n          toggleEditorDialog={this.toggleEditorDialog}\r\n          initialValues={dialogValues}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n        ></ContactEditor2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n"],"sourceRoot":""}