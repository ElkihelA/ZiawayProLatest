{"version":3,"sources":["app/views/ui-kits/slider/BasicSlider.jsx","app/views/ui-kits/slider/RangeSlider.jsx","app/views/ui-kits/slider/StepSlider.jsx","app/views/ui-kits/slider/MarkSlider.jsx","app/views/ui-kits/slider/MinMaxSlider.jsx","app/views/ui-kits/slider/MultiRangeSlider.jsx","app/views/ui-kits/slider/MultiStyledSlider.jsx","app/views/ui-kits/slider/VerticalSlider.jsx","app/views/ui-kits/slider/AppSlider.jsx"],"names":["BasicSlider","useState","value","setValue","onChange","RangeSlider","handle","props","dragging","index","restProps","prefixCls","overlay","visible","placement","key","Handle","StepSlider","step","dots","marks","0","26","37","50","100","style","color","label","MarkSlider","className","min","included","MinMaxSlider","max","MultiRangeSlider","MultiStyledSlider","count","pushable","allowCross","trackStyle","backgroundColor","handleStyle","railStyle","VerticalSlider","height","vertical","AppSlider","state","routeSegments","name","path","SimpleCard","title","Component"],"mappings":"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","file":"static/js/132.aabff52a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Slider from \"rc-slider\";\r\n\r\nconst BasicSlider = () => {\r\n  const [value, setValue] = useState(30);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return <Slider value={value} onChange={handleChange} />;\r\n};\r\n\r\nexport default BasicSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\nconst RangeSlider = () => {\r\n  const [value, setValue] = useState([25, 75]);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n\r\n  };\r\n\r\n  return <Range value={value} onChange={handleChange} />;\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst StepSlider = () => {\r\n  const [value, setValue] = useState(30);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <Slider\r\n      step={25}\r\n      dots={true}\r\n      value={value}\r\n      handle={handle}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StepSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst marks = {\r\n  \"-10\": \"-10°C\",\r\n  0: <strong>0°C</strong>,\r\n  26: \"26°C\",\r\n  37: \"37°C\",\r\n  50: \"50°C\",\r\n  100: {\r\n    style: {\r\n      color: \"red\"\r\n    },\r\n    label: <strong>100°C</strong>\r\n  }\r\n};\r\n\r\nconst MarkSlider = () => {\r\n  const [value, setValue] = useState(30);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3 pb-3\">\r\n      <Slider\r\n        step={25}\r\n        min={-10}\r\n        dots={true}\r\n        included={true}\r\n        marks={marks}\r\n        value={value}\r\n        handle={handle}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst MinMaxSlider = () => {\r\n  const [value, setValue] = useState(30);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <Slider\r\n      min={-25}\r\n      max={75}\r\n      value={value}\r\n      handle={handle}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MinMaxSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst MultiRangeSlider = () => {\r\n  const [value, setValue] = useState([15, 35, 65, 85]);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return <Range value={value} handle={handle} onChange={handleChange} />;\r\n};\r\n\r\nexport default MultiRangeSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst MultiStyledSlider = () => {\r\n  const [value, setValue] = useState([10, 20, 60, 80]);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <Range\r\n      count={3}\r\n      value={value}\r\n      pushable\r\n      handle={handle}\r\n      allowCross={false}\r\n      onChange={handleChange}\r\n      trackStyle={[{ backgroundColor: \"red\" }, { backgroundColor: \"green\" }]}\r\n      handleStyle={[\r\n        { backgroundColor: \"yellow\" },\r\n        { backgroundColor: \"white\" }\r\n      ]}\r\n      railStyle={{ backgroundColor: \"black\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultiStyledSlider;\r\n","import React, { useState } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport Tooltip from \"rc-tooltip\";\r\n\r\nconst handle = props => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Slider.Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nconst VerticalSlider = () => {\r\n  const [value, setValue] = useState(30);\r\n\r\n  const handleChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"200px\" }}>\r\n      <Slider handle={handle} vertical value={value} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalSlider;\r\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport BasicSlider from \"./BasicSlider\";\r\nimport RangeSlider from \"./RangeSlider\";\r\nimport StepSlider from \"./StepSlider\";\r\nimport MarkSlider from \"./MarkSlider\";\r\nimport MinMaxSlider from \"./MinMaxSlider\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider\";\r\nimport MultiStyledSlider from \"./MultiStyledSlider\";\r\nimport VerticalSlider from \"./VerticalSlider\";\r\n\r\nclass AppSlider extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"UI Kits\", path: \"/uikits\" },\r\n            { name: \"Sliders\" }\r\n          ]}\r\n        ></Breadcrumb>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"Basic slider\">\r\n              <BasicSlider></BasicSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"range slider\">\r\n              <RangeSlider></RangeSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"step slider\">\r\n              <StepSlider></StepSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"mark slider with fixed values\">\r\n              <MarkSlider></MarkSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"slider with minimum and maximum\">\r\n              <MinMaxSlider></MinMaxSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"Multi Range slider\">\r\n              <MultiRangeSlider></MultiRangeSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"Multi Range slider with style\">\r\n              <MultiStyledSlider></MultiStyledSlider>\r\n            </SimpleCard>\r\n          </div>\r\n          <div className=\"col-md-6 mb-4\">\r\n            <SimpleCard title=\"Vertical Slider\">\r\n              <VerticalSlider></VerticalSlider>\r\n            </SimpleCard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppSlider;\r\n"],"sourceRoot":""}