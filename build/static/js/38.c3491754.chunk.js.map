{"version":3,"sources":["app/views/sessions/register/plans.js","app/views/sessions/register/payment.js","app/views/sessions/login/form.js","app/views/sessions/login/index.js"],"names":["connect","state","subscription","dispatch","props","loading","plans","useState","period","setPeriod","React","useEffect","getAllPlans","Container","id","defaultActiveKey","variant","className","Item","onClick","Link","eventKey","Content","Object","entries","map","elem","Pane","item","idx","key","image","style","width","src","alt","name","trial_period_days","Intl","NumberFormat","maximumFractionDigits","format","amount","metadata","meta","index","value","val","type","plan","setSubscriptionData","nextStep","ELEMENT_OPTIONS","base","fontSize","color","letterSpacing","height","border","borderRadius","invalid","validationSchema","t","yup","shape","required","setError","stripe","useStripe","elements","useElements","formik","useFormik","initialValues","onSubmit","values","submitPayment","a","cardElement","getElement","CardNumberElement","createToken","token","error","console","log","message","createSubscription","source","user","current","cardName","goToStep","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","errors","touched","options","disabled","SigninSchema","email","password","min","Signin","toggleAlert","setState","closeAlert","event","persist","target","isSubmitting","firebaseLoginEmailPassword","responseGoogle","resp","googleLogin","responseFacebook","facebookLogin","composeDialogOpen","warning","success","prevProps","prevState","snapshot","loginError","this","to","href","rel","backgroundSize","backgroundImage","appId","callback","fields","scope","render","renderProps","Button","clientId","onSuccess","onFailure","err","Component","PropTypes","func","isRequired","pathForRedirect","string","login","step","withTranslation","stripePromise","loadStripe","process","REACT_APP_API_STRIPE_PUBLIC_KEY","StripeElements","firebaseSignUpEmailPassword","signUpUsingGoogle","signUpUsingFacebook","PaiementIntentSecret","profile","firebase","customerId","updateProfile","account","initialStep"],"mappings":"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","file":"static/js/38.c3491754.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Tab, Tabs, Button, TabContent, Nav } from \"react-bootstrap\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAllPlans,\r\n  setSubscriptionData,\r\n} from \"../../../redux/actions/SubscriptionActions\";\r\nimport { Loading } from \"@gull\";\r\n\r\nconst PlansList = ({ subscription = {}, dispatch, ...props }) => {\r\n  const { loading = true, plans = {} } = subscription;\r\n  const [period, setPeriod] = useState(\"week\");\r\n  React.useEffect(() => {\r\n    dispatch(getAllPlans());\r\n  }, []);\r\n\r\n  const selectOffer = (plan) => {\r\n    dispatch(setSubscriptionData({ plan }));\r\n    props.nextStep();\r\n  };\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      <SimpleCard>\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"week\">\r\n          <Nav variant=\"pills\" className=\"px-2 d-flex justify-content-center mb-5\">\r\n            <Nav.Item className=\"mr-2\" onClick={() => setPeriod(\"week\")}>\r\n              <Nav.Link eventKey=\"week\">Weekly</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"mr-2\" onClick={() => setPeriod(\"month\")}>\r\n              <Nav.Link eventKey=\"month\">Monthly</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item onClick={() => setPeriod(\"year\")}>\r\n              <Nav.Link eventKey=\"year\">Yearly</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {plans && (\r\n            <Tab.Content>\r\n              <>\r\n                {Object.entries(plans).map((elem) => {\r\n                  return (\r\n                    <Tab.Pane eventKey={elem[0]}>\r\n                      <div className=\"row\">\r\n                        {elem[1].map((item, idx) => {\r\n                          return (\r\n                            <div\r\n                              key={idx}\r\n                              className=\"col-md-12 col-lg-4 col-xl-4\"\r\n                            >\r\n                              <div className=\"ul-pricing__table-2\">\r\n                                {item.image && (\r\n                                  <div className=\"ul-pricing__image text-primary m-0\">\r\n                                    <img style={{width: 100}} src={item.image} alt=\"price\" />\r\n                                  </div>\r\n                                )}\r\n                                <div className=\"ul-pricing__title\">\r\n                                  <h2 className=\"heading text-primary\">\r\n                                    {item.name}\r\n                                  </h2>\r\n                                </div>\r\n                                {item.trial_period_days && (\r\n                                  <div className=\"ul-pricing__text text-mute\">\r\n                                    {item.trial_period_days} days free trial\r\n                                    period\r\n                                  </div>\r\n                                )}\r\n                                <div className=\"ul-pricing__main-number\">\r\n                                  <h3 className=\"heading text-primary\">\r\n                                    $\r\n                                    {new Intl.NumberFormat(\"us-US\", {\r\n                                      maximumFractionDigits: 2,\r\n                                    }).format(item.amount / 100)}\r\n                                  </h3>\r\n                                  <div className=\"ul-pricing__month\">\r\n                                    <small className=\"text-purple-100\">\r\n                                      per {period}\r\n                                    </small>\r\n                                  </div>\r\n                                </div>\r\n                                {item.metadata.map((meta, index) => {\r\n                                    return (\r\n                                        <div key={index} className=\"ul-pricing__list\">\r\n                                            <h4 className=\"heading text-primary\">{meta.key}</h4>\r\n                                            <div className=\"ul-pricing__table-listing mb-4\">\r\n                                                <ul>\r\n                                                    {meta.value.map(val => (\r\n                                                        <li key={val} className=\"t-font-bolder\">{val}</li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                \r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-lg btn-default btn-rounded btn-primary m-1\"\r\n                                  onClick={() => selectOffer(item)}\r\n                                >\r\n                                  Select Offer\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  );\r\n                })}\r\n              </>\r\n            </Tab.Content>\r\n          )}\r\n        </Tab.Container>\r\n      </SimpleCard>\r\n    </>\r\n  );\r\n};\r\nconst mapStateProps = (state) => ({\r\n  subscription: state.subscription,\r\n});\r\nexport default connect(mapStateProps)(PlansList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport \"./style.scss\"\r\nimport { createSubscription, setSubscriptionData } from \"app/redux/actions/SubscriptionActions\";\r\nimport { Loading } from \"@gull\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nconst ELEMENT_OPTIONS = {\r\n    style: {\r\n        base: {\r\n            fontSize: '18px',\r\n            color: '#424770',\r\n            letterSpacing: '0.025em',\r\n            height: \"50px\",\r\n            border: \"1px solid rgba(0,0,0,0.2)\",\r\n            borderRadius: \"5px\",\r\n            '::placeholder': {\r\n                color: '#e3e3e3',\r\n            },\r\n        },\r\n        invalid: {\r\n            color: '#9e2146',\r\n        },\r\n    },\r\n};\r\n\r\nconst validationSchema = (t) =>\r\n    yup.object().shape({\r\n        name: yup.string().required(\"Please put the name on card\"),\r\n    });\r\n\r\nfunction Payment(props) {\r\n    const { subscription = {}, dispatch } = props\r\n    const [error, setError] = useState(false)\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {name: ''},\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            submitPayment(values)\r\n        },\r\n    });\r\n\r\n    const submitPayment = async (values) => {\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n        setError(false)\r\n        dispatch(setSubscriptionData({ loading: true }));\r\n        const cardElement = elements.getElement(CardNumberElement);\r\n        const { token, error } = await stripe.createToken(cardElement)\r\n        if (error) {\r\n            console.log('[error]', error);\r\n            setError(error.message);\r\n            dispatch(setSubscriptionData({ loading: true }));\r\n        } else {\r\n            console.log('[PaymentMethod]', token);\r\n            dispatch(createSubscription({source: token.id, plan: subscription.plan, user: subscription.current, cardName: values.name}, props.goToStep))\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            {subscription.loading && <Loading /> }\r\n            <div className=\"row p-3 payment-form\">\r\n                <div className=\"col-md-6\">\r\n                    Some additional informations\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {formik && <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">\r\n                                    Name On Card*\r\n                                </label>\r\n                                <input\r\n                                    className=\"form-control form-control-rounded\"\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.name}\r\n                                />\r\n                                {formik.errors.name && formik.touched.name && (\r\n                                    <div className=\"text-danger mt-1 ml-2\">\r\n                                        {formik.errors.name}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        \r\n                        <div className=\"cardNubmer mb-3\">\r\n                            <CardNumberElement options={ELEMENT_OPTIONS} />\r\n                        </div>\r\n                        <div className=\"cvc-data-container\">\r\n                            <CardExpiryElement options={ELEMENT_OPTIONS} />\r\n                            <CardCvcElement options={ELEMENT_OPTIONS} />\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-primary btn-block btn-rounded mt-3\"\r\n                                onClick={submitPayment}\r\n                                disabled={subscription.loading}\r\n                            >\r\n                                Subscribe\r\n                            </button>\r\n                        </div>\r\n                    </form>}\r\n                </div>\r\n            </div></>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    subscription: state.subscription\r\n})\r\nexport default connect(mapStateToProps)(Payment)","import React, { Component } from \"react\";\r\nimport { Formik, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  firebaseLoginEmailPassword,\r\n  facebookLogin,\r\n  googleLogin,\r\n} from \"app/redux/actions/LoginActions\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Loading } from \"@gull\";\r\n\r\nconst SigninSchema = (t) =>\r\n  yup.object().shape({\r\n    email: yup.string().email(\"E-mail invalide\").required(t(\"Sign_in.18\")),\r\n    password: yup.string().min(8, t(\"Sign_in.22\")).required(t(\"Sign_in.19\")),\r\n  });\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      composeDialogOpen: false,\r\n      warning: false,\r\n      success: false,\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  // componentDidMount = () => {\r\n  //   console.log(this.props.location);\r\n  // };\r\n\r\n  // componentDidMount = () => {\r\n  //   if (window.self !== window.top) {\r\n  //     console.log(\"running in iframe\");\r\n  //   } else {\r\n  //     console.log(\"not running in iframe\");\r\n  //   }\r\n  // };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.loginError !== this.props.loginError) {\r\n      if (this.props.loginError) {\r\n        this.toggleAlert(\"warning\");\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleAlert = (name) => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  closeAlert = (name) => {\r\n    this.setState({ [name]: false });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (value, { isSubmitting }) => {\r\n    const { t } = this.props.t;\r\n    // const pathForRedirect = this.props.pathForRedirect;\r\n    this.props.firebaseLoginEmailPassword(value, this.props.t, this.props.nextStep);\r\n  };\r\n\r\n  responseGoogle = (resp) => {\r\n    const { t, nextStep } = this.props;\r\n    this.props.googleLogin(t, resp, nextStep)\r\n  }\r\n\r\n  responseFacebook = (resp) => {\r\n    const {t, nextStep} = this.props;\r\n    this.props.facebookLogin(t, resp, nextStep);\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"route\", window.top.location.href);\r\n    const { t, loading } = this.props;\r\n\r\n    return (\r\n      <>\r\n      {loading && <Loading />}\r\n      <>\r\n            <div className=\"auth-content\">\r\n              <div className=\"card o-hidden\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"p-4\">\r\n                      <div className=\"auth-logo text-center mb-4\">\r\n                        <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                      </div>\r\n                      <h1 className=\"mb-3 text-18\">{t(\"Sign_in.1\")}</h1>\r\n                      <Formik\r\n                        initialValues={this.state}\r\n                        validationSchema={SigninSchema(t)}\r\n                        onSubmit={this.handleSubmit}\r\n                      >\r\n                        {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                        }) => (\r\n                          <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                              <label htmlFor=\"email\">{t(\"Sign_in.2\")}</label>\r\n                              <input\r\n                                className=\"form-control form-control-rounded position-relative\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                              />\r\n                              {errors.email && (\r\n                                <div className=\"text-danger mt-1 ml-2\">\r\n                                  {errors.email}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label htmlFor=\"password\">{t(\"Sign_in.3\")}</label>\r\n                              <input\r\n                                className=\"form-control form-control-rounded\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                              />\r\n                              {errors.password && (\r\n                                <div className=\"text-danger mt-1 ml-2\">\r\n                                  {errors.password}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            {/* <div style={{ paddingLeft: \"22px\" }}>\r\n                              <Field\r\n                                type=\"checkbox\"\r\n                                name=\"acceptTerms\"\r\n                                className={\r\n                                  \"form-check-input \" +\r\n                                  (errors.acceptTerms && touched.acceptTerms\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                              />\r\n                              <label\r\n                                htmlFor=\"acceptTerms\"\r\n                                className=\"form-check-label\"\r\n                              >\r\n                                {t(\"Sign_in.13\")} <br />\r\n                                <a\r\n                                  href=\"https://blog.ziaway.ca/politique-de-confidentialit%C3%A9\"\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                >\r\n                                  {t(\"Sign_in.14\")}\r\n                                </a>\r\n                              </label>\r\n                              <ErrorMessage\r\n                                name=\"acceptTerms\"\r\n                                component=\"div\"\r\n                                className=\"invalid-feedback\"\r\n                              />\r\n                            </div> */}\r\n                            <button\r\n                              className=\"btn btn-rounded btn-primary btn-block mt-2\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {t(\"Sign_in.4\")}\r\n                            </button>\r\n                          </form>\r\n                        )}\r\n                      </Formik>\r\n\r\n                      <div className=\"mt-3 text-center\">\r\n                        <Link\r\n                          to=\"/session/forgot-password\"\r\n                          className=\"text-muted\"\r\n                        >\r\n                          <u>{t(\"Sign_in.5\")}</u>\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"mt-1 text-center\">\r\n                        <a\r\n                          href=\"https://blog.ziaway.ca/politiques-de-confidentialite/\"\r\n                          className=\"text-muted\"\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {\" \"}\r\n                          <u>{t(\"Sign_in.6\")} </u>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"col-md-6 text-center \"\r\n                    style={{\r\n                      backgroundSize: \"cover\",\r\n                      backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\r\n                    }}\r\n                  >\r\n                    <div className=\"pr-3 auth-right\">\r\n                      <Link\r\n                        to=\"/session/signup\"\r\n                        //to=\"/evaluation-bien\"\r\n                        className=\"btn btn-rounded btn-outline-primary btn-outline-email btn-block btn-icon-text\"\r\n                      >\r\n                        <i className=\"i-Mail-with-At-Sign\"></i>\r\n                        {t(\"Sign_in.15\")}\r\n                      </Link>\r\n                      <FacebookLogin\r\n                        appId={\"448032760458177\"}\r\n                        callback={this.responseFacebook}\r\n                        fields=\"name,email,picture\"\r\n                        scope=\"public_profile, email\"\r\n                        render={(renderProps) => (\r\n                            <Button\r\n                              onClick={renderProps.onClick}\r\n                              className=\"btn btn-rounded btn-block btn-icon-text btn-outline-facebook\"\r\n                            >\r\n                              <i className=\"i-Facebook-2\"></i> {t(\"Sign_in.16\")}\r\n                            </Button>\r\n                        )}\r\n                      />\r\n                      <GoogleLogin\r\n                        clientId={\"224379580293-ph903a84q69uobrocoemkoh3u5at2td6.apps.googleusercontent.com\"}\r\n                        onSuccess={this.responseGoogle}\r\n                        onFailure={(err) => {\r\n                          console.log(err);\r\n                        }}\r\n                        render={props => (\r\n                          <Button\r\n                            onClick={props.onClick}\r\n                            className=\"btn btn-rounded btn-outline-google btn-block btn-icon-text\"\r\n                          >\r\n                            <i className=\"i-Google-Plus\"></i> {t(\"Sign_in.17\")}\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                      {/** \r\n                  <Button className=\"btn btn-rounded btn-outline-google btn-block btn-icon-text\">\r\n                    <i className=\"i-Google-Plus\"></i>S'inscrire avec  Google\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded btn-block btn-icon-text btn-outline-facebook\">\r\n                    <i className=\"i-Facebook-2\"></i>S'inscrire avec Facebook\r\n                  </Button>\r\n                  */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  firebaseLoginEmailPassword: PropTypes.func.isRequired,\r\n  facebookLogin: PropTypes.func.isRequired,\r\n  googleLogin: PropTypes.func.isRequired,\r\n  pathForRedirect: PropTypes.string.isRequired,\r\n  loginError: state.login.loginError,\r\n  user: state.user,\r\n  step: state.subscription.step,\r\n  loading: state.subscription.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  firebaseLoginEmailPassword,\r\n  facebookLogin,\r\n  googleLogin,\r\n})(withTranslation()(Signin));\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StepWizard from \"react-step-wizard\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { connect } from \"react-redux\";\r\nimport Sigin from \"./form\";\r\nimport PlansList from \"../register/plans\"\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport Payment from \"../register/payment\";\r\nimport { setSubscriptionData } from \"app/redux/actions/SubscriptionActions\";\r\nconst stripePromise = loadStripe(process.env.REACT_APP_API_STRIPE_PUBLIC_KEY);\r\n\r\nconst Login = ({t, subscription, dispatch}) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSubscriptionData({account: {}, step: 1}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-3.jpg)\",\r\n        }}\r\n      >\r\n        <div className=\"auth-content \">\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <StepWizard initialStep={1} >\r\n                    <Sigin />\r\n                    <PlansList />\r\n                    <StripeElements />\r\n                </StepWizard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst StripeElements = ({goToStep}) => (\r\n    <Elements stripe={stripePromise}>\r\n      <Payment goToStep={goToStep} />\r\n    </Elements>\r\n)\r\nconst mapStateToProps = (state) => ({\r\n  firebaseSignUpEmailPassword: PropTypes.func.isRequired,\r\n  signUpUsingGoogle: PropTypes.func.isRequired,\r\n  signUpUsingFacebook: PropTypes.func.isRequired,\r\n  PaiementIntentSecret: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  login: state.login,\r\n  profile: state.firebase.profile,\r\n  customerId: state.firebase.profile.customerId,\r\n  updateProfile: PropTypes.func.isRequired,\r\n  subscription: state.subscription\r\n});\r\n\r\nexport default connect(mapStateToProps)(withTranslation()(Login))\r\n"],"sourceRoot":""}