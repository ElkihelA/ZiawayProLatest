{"version":3,"sources":["app/views/videoCall/Lobby.js","app/views/videoCall/Participant.js","app/views/videoCall/Room.js","app/views/videoCall/IncomingVideo.js"],"names":["Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","connecting","onSubmit","htmlFor","type","id","value","onChange","readOnly","required","disabled","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","className","identity","ref","autoPlay","muted","Room","room","handleLogout","console","log","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","remoteParticipants","key","sid","onClick","localParticipant","IncomingVideoCall","history","useHistory","profile","useSelector","state","firebase","Meetings","firestore","ordered","setUsername","setRoomName","setRoom","setConnecting","meetingId","setMeetingId","useFirestoreConnect","collection","where","email","useCallback","event","target","prevRoom","tracks","trackPub","stop","disconnect","attendCall","fetch","method","body","JSON","stringify","RoomNumber","headers","then","res","json","data","Video","connect","token","name","catch","err","error","tidyUp","persisted","window","addEventListener","removeEventListener","doc","delete","push"],"mappings":"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","file":"static/js/44.0c31c000.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Lobby = ({\r\n  username,\r\n  handleUsernameChange,\r\n  roomName,\r\n  handleRoomNameChange,\r\n  handleSubmit,\r\n  connecting,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Enter a room</h2>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"field\"\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n          readOnly={connecting}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"room\">Room name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"room\"\r\n          value={roomName}\r\n          onChange={handleRoomNameChange}\r\n          readOnly={connecting}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={connecting}>\r\n        {connecting ? \"Connecting\" : \"Join\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Participant = ({ participant }) => {\r\n  const [videoTracks, setVideoTracks] = useState([]);\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n\r\n  const videoRef = useRef();\r\n  const audioRef = useRef();\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null);\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\r\n      }\r\n    };\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\r\n      }\r\n    };\r\n\r\n    participant.on(\"trackSubscribed\", trackSubscribed);\r\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n    return () => {\r\n      setVideoTracks([]);\r\n      setAudioTracks([]);\r\n      participant.removeAllListeners();\r\n    };\r\n  }, [participant]);\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current);\r\n      return () => {\r\n        videoTrack.detach();\r\n      };\r\n    }\r\n  }, [videoTracks]);\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0];\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current);\r\n      return () => {\r\n        audioTrack.detach();\r\n      };\r\n    }\r\n  }, [audioTracks]);\r\n\r\n  return (\r\n    <div className=\"participant\">\r\n      <h3>{participant.identity}</h3>\r\n      <video ref={videoRef} autoPlay={true} />\r\n      <audio ref={audioRef} autoPlay={true} muted={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Participant from \"./Participant\";\r\n\r\nconst Room = ({ roomName, room, handleLogout }) => {\r\n  console.log(\"room\", room);\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const participantConnected = (participant) => {\r\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\r\n    };\r\n\r\n    const participantDisconnected = (participant) => {\r\n      setParticipants((prevParticipants) =>\r\n        prevParticipants.filter((p) => p !== participant)\r\n      );\r\n    };\r\n\r\n    room.on(\"participantConnected\", participantConnected);\r\n    room.on(\"participantDisconnected\", participantDisconnected);\r\n    room.participants.forEach(participantConnected);\r\n    return () => {\r\n      room.off(\"participantConnected\", participantConnected);\r\n      room.off(\"participantDisconnected\", participantDisconnected);\r\n    };\r\n  }, [room]);\r\n\r\n  const remoteParticipants = participants.map((participant) => (\r\n    <Participant key={participant.sid} participant={participant} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"room\">\r\n      <h2>Room: {roomName}</h2>\r\n      <button onClick={handleLogout}>Log out</button>\r\n      <div className=\"local-participant\">\r\n        {room ? (\r\n          <Participant\r\n            key={room.localParticipant.sid}\r\n            participant={room.localParticipant}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <h3>Remote Participants</h3>\r\n      <div className=\"remote-participants\">{remoteParticipants}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Video from \"twilio-video\";\r\nimport Lobby from \"./Lobby\";\r\nimport Room from \"./Room\";\r\nimport firebase from \"../../services/firebase/firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst IncomingVideoCall = () => {\r\n  const history = useHistory();\r\n  const profile = useSelector((state) => state.firebase.profile);\r\n  const Meetings = useSelector((state) => state.firestore.ordered.Meetings);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [room, setRoom] = useState(null);\r\n  const [connecting, setConnecting] = useState(false);\r\n  const [meetingId, setMeetingId] = useState(null);\r\n\r\n  useFirestoreConnect([\r\n    {\r\n      collection: \"Meetings\",\r\n      where: [\"RecieverEmail\", \"==\", profile.email],\r\n    },\r\n  ]);\r\n\r\n  const handleDelete = () => {\r\n    firebase.firestore().collection(\"Meetings\").doc(meetingId?.id).delete();\r\n    handleLogout();\r\n    history.push(\"/newleads\");\r\n    // .then(() => window.location.reload());\r\n  };\r\n\r\n  const handleUsernameChange = useCallback((event) => {\r\n    setUsername(event.target.value);\r\n  }, []);\r\n\r\n  const handleRoomNameChange = useCallback((event) => {\r\n    setRoomName(event.target.value);\r\n  }, []);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    setRoom((prevRoom) => {\r\n      if (prevRoom) {\r\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\r\n          trackPub.track.stop();\r\n        });\r\n        prevRoom.disconnect();\r\n      }\r\n      return null;\r\n    });\r\n  }, []);\r\n\r\n  const attendCall = async () => {\r\n    console.log(\"i am running\", meetingId);\r\n    setConnecting(true);\r\n    const data = await fetch(\r\n      \"https://us-central1-ziaapp-ac0eb.cloudfunctions.net/GetToken\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          identity: profile?.email,\r\n          room: meetingId?.RoomNumber,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    console.log(\"datatoken\", data);\r\n    Video.connect(data.token, {\r\n      name: meetingId?.RoomNumber,\r\n    })\r\n      .then((room) => {\r\n        setConnecting(false);\r\n        setRoom(room);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setConnecting(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (meetingId) {\r\n      attendCall();\r\n    }\r\n  }, [meetingId]);\r\n\r\n  useEffect(() => {\r\n    if (room) {\r\n      const tidyUp = (event) => {\r\n        if (event.persisted) {\r\n          return;\r\n        }\r\n        if (room) {\r\n          handleLogout();\r\n        }\r\n      };\r\n      window.addEventListener(\"pagehide\", tidyUp);\r\n      window.addEventListener(\"beforeunload\", tidyUp);\r\n      return () => {\r\n        window.removeEventListener(\"pagehide\", tidyUp);\r\n        window.removeEventListener(\"beforeunload\", tidyUp);\r\n      };\r\n    }\r\n  }, [room, handleLogout]);\r\n\r\n  useEffect(() => {\r\n    if (Meetings) {\r\n      setMeetingId(Meetings[0]);\r\n    }\r\n  }, [Meetings]);\r\n\r\n  console.log(\"Meeting\", Meetings, meetingId);\r\n\r\n  if (connecting === true || meetingId === null) {\r\n    return <>loading...</>;\r\n  }\r\n\r\n  let render;\r\n  if (room) {\r\n    render = <Room roomName=\"001\" room={room} handleLogout={handleDelete} />;\r\n  } else {\r\n    render = (\r\n      <Lobby\r\n        username={username}\r\n        roomName={roomName}\r\n        handleUsernameChange={handleUsernameChange}\r\n        handleRoomNameChange={handleRoomNameChange}\r\n        // handleSubmit={handleSubmit}\r\n        connecting={connecting}\r\n      />\r\n    );\r\n  }\r\n  return render;\r\n};\r\n\r\nexport default IncomingVideoCall;\r\n"],"sourceRoot":""}