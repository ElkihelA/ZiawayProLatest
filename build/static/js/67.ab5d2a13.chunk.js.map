{"version":3,"sources":["app/GullLayout/Layout1/Layout1Sidenav.jsx","app/GullLayout/Layout1/Layout1Header.jsx","app/GullLayout/Layout1/Layout1.jsx"],"names":["Layout1Sidenav","windowListener","state","selectedItem","navOpen","secondaryNavOpen","onMainItemMouseEnter","item","type","setSelected","openSecSidenav","closeSecSidenav","onMainItemMouseLeave","setState","removeSelected","props","setLayoutSettings","settings","merge","layout1Settings","leftSidebar","other","isMobile","open","closeSidenav","console","log","openSidenav","this","window","innerWidth","addEventListener","target","removeEventListener","t","navigationRole","navigations","filter","role","user","className","classList","map","i","active","onMouseEnter","onMouseLeave","key","path","to","icon","name","href","sub","menu","Component","withRouter","connect","setDefaultSettings","PropTypes","func","isRequired","logoutUser","firebase","profile","layout","withTranslation","Layout1Header","shorcutMenuList","link","text","notificationList","title","description","time","color","status","showSearchBox","handleMenuClick","handleLanguage","lang","i18n","changeLanguage","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","language","src","alt","onClick","rel","Dropdown","Menu","MegaMenu","style","margin","displayName","Toggle","variant","id","height","width","france","Item","Layout1","handleSearchBoxClose","routes","fallback","Loading","renderRoutes","footer","show","Footer","GullSearch","handleClose"],"mappings":"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","file":"static/js/67.ab5d2a13.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { merge } from \"lodash\";\r\nimport { classList, isMobile } from \"@utils\";\r\nimport Srcollbar from \"react-perfect-scrollbar\";\r\nimport { DropDownMenu } from \"@gull\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings,\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ScrollBar from \"react-perfect-scrollbar\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass Layout1Sidenav extends Component {\r\n  windowListener = null;\r\n\r\n  state = {\r\n    selectedItem: null,\r\n    navOpen: true,\r\n    secondaryNavOpen: false,\r\n  };\r\n\r\n  onMainItemMouseEnter = (item) => {\r\n    if (item.type === \"dropDown\") {\r\n      this.setSelected(item);\r\n      this.openSecSidenav();\r\n    } else {\r\n      this.setSelected(item);\r\n      this.closeSecSidenav();\r\n    }\r\n  };\r\n\r\n  onMainItemMouseLeave = () => {\r\n    // this.closeSecSidenav();\r\n  };\r\n\r\n  setSelected = (selectedItem) => {\r\n    this.setState({ selectedItem });\r\n    // console.log(selectedItem);\r\n  };\r\n\r\n  removeSelected = () => {\r\n    this.setState({ selectedItem: null });\r\n    // console.log('removed');\r\n  };\r\n\r\n  openSecSidenav = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            secondaryNavOpen: true,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  closeSecSidenav = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    let other = {};\r\n\r\n    if (isMobile()) {\r\n      other.open = false;\r\n    }\r\n\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            ...other,\r\n            secondaryNavOpen: false,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  closeSidenav = () => {\r\n    console.log(\"closing sidenav\");\r\n\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: false,\r\n            secondaryNavOpen: false,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  openSidenav = () => {\r\n    console.log(\"opening sidenav\");\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: true,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.selectedItem === null) this.closeSecSidenav();\r\n\r\n    if (window)\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSidenav();\r\n      } else {\r\n        this.openSidenav();\r\n      }\r\n\r\n    this.windowListener = window.addEventListener(\"resize\", ({ target }) => {\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSidenav();\r\n      } else {\r\n        this.openSidenav();\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.windowListener) {\r\n      window.removeEventListener(\"resize\", this.windowListener);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { settings } = this.props;\r\n    const { t } = this.props;\r\n    const navigationRole = navigations(t).filter((item) => {\r\n      if (item.role == this.props.user.role) {\r\n        return item;\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"side-content-wrap sidebar-dark-purple\">\r\n        <Srcollbar\r\n          className={classList({\r\n            \"sidebar-left o-hidden rtl-ps-none \": true,\r\n            open: settings.layout1Settings.leftSidebar.open,\r\n          })}\r\n          // id=\"mainsidenav\"\r\n        >\r\n          <ul className=\"navigation-left\">\r\n            {navigationRole.map((item, i) => (\r\n              <li\r\n                className={classList({\r\n                  \"nav-item\": true,\r\n                  active: this.state.selectedItem === item,\r\n                })}\r\n                onMouseEnter={() => {\r\n                  this.onMainItemMouseEnter(item);\r\n                }}\r\n                onMouseLeave={this.onMainItemMouseLeave}\r\n                key={i}\r\n              >\r\n                {item.path && item.type !== \"extLink\" && (\r\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </NavLink>\r\n                )}\r\n                {item.path && item.type === \"extLink\" && (\r\n                  <a className=\"nav-item-hold\" href={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </a>\r\n                )}\r\n                {!item.path && (\r\n                  <div className=\"nav-item-hold\">\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"triangle\"></div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Srcollbar>\r\n\r\n        <ScrollBar\r\n          className={classList({\r\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen,\r\n          })}\r\n        >\r\n          {this.state.selectedItem && this.state.selectedItem.sub && (\r\n            <DropDownMenu\r\n              menu={this.state.selectedItem.sub}\r\n              closeSecSidenav={this.closeSecSidenav}\r\n            ></DropDownMenu>\r\n          )}\r\n          <span></span>\r\n        </ScrollBar>\r\n        <div\r\n          onMouseEnter={this.closeSecSidenav}\r\n          className={classList({\r\n            \"sidebar-overlay\": true,\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen,\r\n          })}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.firebase.profile,\r\n  settings: state.layout.settings,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n    setDefaultSettings,\r\n    logoutUser,\r\n  })(withTranslation()(Layout1Sidenav))\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport { getTimeDifference } from \"@utils\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport france from \"../../../flags/france.png\";\r\nimport england from \"../../../flags/english.png\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings,\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { merge } from \"lodash\";\r\nimport MegaMenu from \"@gull/components/MegaMenu\";\r\nimport { withTranslation } from \"react-i18next\";\r\n// import i18n from \"i18next\";\r\n// import t from \"i18next\";\r\n\r\nclass Layout1Header extends Component {\r\n  state = {\r\n    shorcutMenuList: [\r\n      {\r\n        icon: \"i-Shop-4\",\r\n        link: \"#\",\r\n        text: \"Home\",\r\n      },\r\n      {\r\n        icon: \"i-Library\",\r\n        link: \"#\",\r\n        text: \"Ui Kits\",\r\n      },\r\n      {\r\n        icon: \"i-Drop\",\r\n        link: \"#\",\r\n        text: \"Apps\",\r\n      },\r\n      {\r\n        icon: \"i-File-Clipboard-File--Text\",\r\n        link: \"#\",\r\n        text: \"Form\",\r\n      },\r\n      {\r\n        icon: \"i-Checked-User\",\r\n        link: \"#\",\r\n        text: \"Sessions\",\r\n      },\r\n      {\r\n        icon: \"i-Ambulance\",\r\n        link: \"#\",\r\n        text: \"Support\",\r\n      },\r\n    ],\r\n    notificationList: [\r\n      {\r\n        icon: \"i-Speach-Bubble-6\",\r\n        title: \"New message\",\r\n        description: \"James: Hey! are you busy?\",\r\n        time: \"2019-10-30T02:10:18.931Z\",\r\n        color: \"primary\",\r\n        status: \"New\",\r\n      },\r\n      {\r\n        icon: \"i-Receipt-3\",\r\n        title: \"New order received\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"New\",\r\n      },\r\n      {\r\n        icon: \"i-Empty-Box\",\r\n        title: \"Product out of stock\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-05-10T02:10:18.931Z\",\r\n        color: \"danger\",\r\n        status: \"3\",\r\n      },\r\n      {\r\n        icon: \"i-Data-Power\",\r\n        title: \"Server up!\",\r\n        description: \"Server rebooted successfully\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"3\",\r\n      },\r\n    ],\r\n    showSearchBox: false,\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\r\n              ? true\r\n              : !settings.layout1Settings.leftSidebar.open,\r\n            secondaryNavOpen: false,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  handleLanguage = (lang) => {\r\n    this.props.i18n.changeLanguage(lang);\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    if (document.fullscreenEnabled) {\r\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\r\n      else document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  handleSearchBoxOpen = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          searchBox: {\r\n            open: true,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\r\n    const { t, profile } = this.props;\r\n    console.log(\"lamguage\", this.props.i18n.language);\r\n    return (\r\n      <div className=\"main-header px-0\">\r\n        <div className=\"logo\">\r\n          <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n\r\n        <div className=\"d-none d-lg-flex align-items-center\">\r\n          <Link className=\"pl-3 text-16\" to=\"/\">\r\n            <i className=\"i-Home1 pr-2\"></i>\r\n            {t(\"Header.1\")}\r\n          </Link>\r\n          {/* <a\r\n            className=\"pl-3 text-16\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://blog.ziaway.ca/\"\r\n          >\r\n            <span className=\"pl-2 pr-2\"></span>\r\n            <i className=\"i-Home-4 pr-2\"></i>\r\n            Ziaway.ca\r\n          </a> */}\r\n          <a\r\n            className=\"pl-3 text-16\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://pro.ziaway.ca/blogs/\"\r\n          >\r\n            <span className=\"pl-2 pr-2\"></span>\r\n            <i className=\"i-Newspaper pr-2\"></i>\r\n            {t(\"Header.2\")}\r\n          </a>\r\n          {/* <a\r\n              className=\"pl-3 text-16\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://www.ziaway.ca/contactez-nous\"\r\n            >\r\n              <span className=\"pl-2 pr-2\"></span>\r\n              <i className=\"i-Support pr-2\"></i>\r\n              {t(\"Header.3\")}\r\n            </a> */}\r\n          <Link className=\"pl-3 text-16\" to=\"/moncompte\">\r\n            <i className=\"i-Administrator pr-2\"></i>\r\n            {t(\"Header.6\")}\r\n          </Link>\r\n          <Dropdown className=\"mr-3\">\r\n            <div className=\"mega-menu\">\r\n              <Dropdown.Menu>\r\n                <MegaMenu></MegaMenu>\r\n              </Dropdown.Menu>\r\n            </div>\r\n          </Dropdown>\r\n\r\n          {/**   <div className=\"search-bar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              onFocus={this.handleSearchBoxOpen}\r\n            />\r\n            <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>\r\n          </div>*/}\r\n        </div>\r\n\r\n        <div style={{ margin: \"auto\" }}></div>\r\n\r\n        <div className=\"header-part-right\">\r\n          {/* <i\r\n            className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\r\n            data-fullscreen\r\n            onClick={this.toggleFullScreen}\r\n          ></i> */}\r\n          {/**\r\n          <Dropdown>\r\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden\">\r\n              <i\r\n                className=\"i-Safe-Box text-muted header-icon\"\r\n                role=\"button\"\r\n              ></i>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <div className=\"menu-icon-grid\">\r\n                {shorcutMenuList.map((menu) => (\r\n                  <Link key={menu.text} to={menu.link}>\r\n                    <i className={menu.icon}></i> {menu.text}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Dropdown>\r\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden cursor-pointer\">\r\n              <div\r\n                className=\"badge-top-container\"\r\n                role=\"button\"\r\n                id=\"dropdownNotification\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <span className=\"badge badge-primary\">3</span>\r\n                <i className=\"i-Bell text-muted header-icon\"></i>\r\n              </div>\r\n            </Dropdown.Toggle>\r\n\r\n            <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\r\n              {notificationList.map((note, index) => (\r\n                <div key={index} className=\"dropdown-item d-flex\">\r\n                  <div className=\"notification-icon\">\r\n                    <i className={`${note.icon} text-${note.color} mr-1`}></i>\r\n                  </div>\r\n                  <div className=\"notification-details flex-grow-1\">\r\n                    <p className=\"m-0 d-flex align-items-center\">\r\n                      <span>{note.title}</span>\r\n                      <span\r\n                        className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\r\n                      >\r\n                        {note.status}\r\n                      </span>\r\n                      <span className=\"flex-grow-1\"></span>\r\n                      <span className=\"text-small text-muted ml-auto\">\r\n                        {getTimeDifference(new Date(note.time))} ago\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"text-small text-muted m-0\">\r\n                      {note.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          */}\r\n          <div className=\"d-none d-lg-block align-self-end\">\r\n            <Link className=\"dropdown-item cursor-pointer bg-primary rounded\">\r\n              <span className=\"text-16 text-white text-bold text-capitalize\">\r\n                {t(\"Header.5\")} {profile.displayName}\r\n              </span>\r\n            </Link>\r\n          </div>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              variant=\"link\"\r\n              id=\"dropdown-basic\"\r\n              className=\"d-flex align-items-center\"\r\n            >\r\n              <img\r\n                className=\"d-block mr-1\"\r\n                height={15}\r\n                width={22}\r\n                src={france}\r\n                alt=\"..\"\r\n              />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => this.handleLanguage(\"sp\")}>\r\n                <div className=\"d-flex align-items-center\">\r\n                  {/* <img\r\n                    className=\"d-block mr-2\"\r\n                    height={15}\r\n                    width={18}\r\n                    src={france}\r\n                    alt=\"..\"\r\n                  /> */}\r\n                  <span>French</span>\r\n                </div>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => this.handleLanguage(\"en\")}>\r\n                <div className=\"d-flex align-items-center\">\r\n                  {/* <img\r\n                    className=\"d-block mr-2\"\r\n                    height={15}\r\n                    width={18}\r\n                    src={england}\r\n                    alt=\"..\"\r\n                  /> */}\r\n                  <span> English</span>\r\n                </div>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"user col align-self-end\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"dropdown-item cursor-pointer\"\r\n              onClick={this.props.logoutUser}\r\n            >\r\n              <span className=\"text-18 text-primary text-bold\">\r\n                {\" \"}\r\n                {t(\"Header.4\")}\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Header.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  profile: state.firebase.profile,\r\n  settings: state.layout.settings,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n    setDefaultSettings,\r\n    logoutUser,\r\n  })(withTranslation()(Layout1Header))\r\n);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { renderRoutes } from \"react-router-config\";\r\n\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedComponents/Footer\";\r\nimport Layout1Header from \"./Layout1Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { classList } from \"@utils\";\r\nimport GullSearch from \"@gull/components/GullSearch\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { merge } from \"lodash\";\r\nimport Loading from \"@gull/components/GullLoadable/Loading\";\r\n\r\nclass Layout1 extends Component {\r\n  state = {};\r\n\r\n  handleSearchBoxClose = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          searchBox: {\r\n            open: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { settings, routes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div \r\n        className={`${classList({\r\n            \"app-admin-wrap layout-sidebar-large\": true,\r\n            \"sidenav-open\": settings.layout1Settings.leftSidebar.open\r\n          })} sidebar-dark-purple`}\r\n          >\r\n          <Layout1Header></Layout1Header>\r\n          <Layout1Sidenav />\r\n          {/* sidebar */}\r\n\r\n          <div\r\n            className={classList({\r\n              \"main-content-wrap d-flex flex-column\": true,\r\n              \"sidenav-open\": settings.layout1Settings.leftSidebar.open\r\n            })} \r\n          >\r\n            <Suspense fallback={<Loading />}>\r\n              <div className=\"main-content\">{renderRoutes(routes)}</div>\r\n            </Suspense>\r\n            {(settings.footer.show && <Footer></Footer>)}\r\n          </div>\r\n        </div>\r\n        <GullSearch\r\n          open={settings.layout1Settings.searchBox.open}\r\n          handleClose={this.handleSearchBoxClose}\r\n        ></GullSearch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLayoutSettings })(Layout1);\r\n"],"sourceRoot":""}