{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["ForgotPasswordSchema","yup","shape","email","required","ForgotPassword","state","handleChange","event","persist","setState","target","name","value","handleSubmit","isSubmitting","props","resetPassword","className","style","backgroundImage","src","alt","initialValues","this","validationSchema","onSubmit","values","errors","touched","handleBlur","htmlFor","type","onChange","onBlur","to","backgroundSize","Component","connect","PropTypes","func","isRequired","user"],"mappings":"wPASMA,EAAuBC,WAAaC,MAAM,CAC9CC,MAAOF,WAEJE,MAAM,iBACNC,SAAS,uBAGRC,E,4MACJC,MAAQ,CACNH,MAAO,sB,EAGTI,aAAe,SAAAC,GACbA,EAAMC,UACN,EAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,S,EAGpDC,aAAe,SAACD,EAAD,GAA6B,EAAnBE,aACvB,EAAKC,MAAMC,cAAcJ,I,4CAG3B,WACE,OACE,yBACEK,UAAU,mBACVC,MAAO,CACLC,gBAAiB,yCAGnB,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKG,IAAI,0BAA0BC,IAAI,MAEzC,wBAAIJ,UAAU,gBAAd,0BACA,kBAAC,IAAD,CACEK,cAAeC,KAAKlB,MACpBmB,iBAAkBzB,EAClB0B,SAAUF,KAAKV,eAEd,gBACCa,EADD,EACCA,OACAC,EAFD,EAECA,OAEArB,GAJD,EAGCsB,QAHD,EAICtB,cACAuB,EALD,EAKCA,WACAhB,EAND,EAMCA,aAND,EAOCC,aAPD,OASC,0BAAMW,SAAUZ,GACd,yBAAKI,UAAU,cACb,2BAAOa,QAAQ,SAAf,UACA,2BACEb,UAAU,sDACVc,KAAK,QACLpB,KAAK,QACLqB,SAAU1B,EACV2B,OAAQJ,EACRjB,MAAOc,EAAOxB,QAEfyB,EAAOzB,OACN,yBAAKe,UAAU,yBACZU,EAAOzB,QAId,4BACEe,UAAU,6CACVc,KAAK,UAFP,yCAUN,yBAAKd,UAAU,oBACb,kBAAC,IAAD,CAAMiB,GAAG,kBAAkBjB,UAAU,cACnC,+CAKR,yBACEA,UAAU,wBACVC,MAAO,CACLiB,eAAgB,QAChBhB,gBAAiB,yCAGnB,yBAAKF,UAAU,mBACb,kBAAC,IAAD,CAAQA,UAAU,iFAClB,kBAAC,IAAD,CAAMiB,GAAG,mBACP,uBAAGjB,UAAU,wBADf,4B,GAxFWmB,aAkHdC,uBALS,SAAAhC,GAAK,MAAK,CAChCW,cAAesB,IAAUC,KAAKC,WAC9BC,KAAMpC,EAAMoC,QAG0B,CACtCzB,mBADaqB,CAEZjC","file":"static/js/123.7914b3aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginWithEmailAndPassword,resetPassword } from \"app/redux/actions/LoginActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ForgotPasswordSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email\")\r\n    .required(\"email is required\")\r\n});\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    email: \"Ziaway@example.com\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (value, { isSubmitting }) => {\r\n    this.props.resetPassword(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"auth-layout-wrap\"\r\n        style={{\r\n          backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\"\r\n        }}\r\n      >\r\n        <div className=\"auth-content\">\r\n          <div className=\"card o-hidden\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"p-4\">\r\n                  <div className=\"auth-logo text-center mb-4\">\r\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n                  </div>\r\n                  <h1 className=\"mb-3 text-18\">Mot de passe oublié</h1>\r\n                  <Formik\r\n                    initialValues={this.state}\r\n                    validationSchema={ForgotPasswordSchema}\r\n                    onSubmit={this.handleSubmit}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">E-mail</label>\r\n                          <input\r\n                            className=\"form-control form-control-rounded position-relative\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                          />\r\n                          {errors.email && (\r\n                            <div className=\"text-danger mt-1 ml-2\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-rounded btn-primary btn-block mt-2\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Réinitialisser le mot de passe \r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n\r\n                  <div className=\"mt-3 text-center\">\r\n                    <Link to=\"/session/signin\" className=\"text-muted\">\r\n                      <u>Se connecter</u>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"col-md-6 text-center \"\r\n                style={{\r\n                  backgroundSize: \"cover\",\r\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\"\r\n                }}\r\n              >\r\n                <div className=\"pr-3 auth-right\">\r\n                  <Button className=\"btn btn-rounded btn-outline-primary btn-outline-email btn-block btn-icon-text\">\r\n                  <Link to=\"/session/signin\">\r\n                    <i className=\"i-Mail-with-At-Sign\"></i> Se connecter\r\n                    </Link>\r\n                  </Button>\r\n                {/*  <Button className=\"btn btn-rounded btn-outline-google btn-block btn-icon-text\">\r\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\r\n                  </Button>\r\n                  <Button className=\"btn btn-rounded btn-block btn-icon-text btn-outline-facebook\">\r\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\r\n                  </Button>\r\n                  */} \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  resetPassword: PropTypes.func.isRequired,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetPassword\r\n})(ForgotPassword);\r\n"],"sourceRoot":""}