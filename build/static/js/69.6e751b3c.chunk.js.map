{"version":3,"sources":["app/GullLayout/Layout2/Layout2Header.jsx","app/GullLayout/Layout2/Layout2Sidenav.jsx","app/GullLayout/Layout2/Layout2.jsx"],"names":["Layout2Header","state","shorcutMenuList","icon","link","text","notificationList","title","description","time","color","status","showSearchBox","handleMenuClick","props","setLayoutSettings","settings","merge","layout2Settings","leftSidebar","open","secondaryNavOpen","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","this","className","src","alt","onClick","Dropdown","Toggle","variant","id","Menu","MegaMenu","type","placeholder","onFocus","style","margin","data-fullscreen","role","map","menu","key","to","data-toggle","DropdownMenu","note","index","getTimeDifference","Date","DropdownToggle","aria-haspopup","aria-expanded","logoutUser","Component","withRouter","connect","setDefaultSettings","PropTypes","func","isRequired","user","layout","Layout2Sidenav","windowListener","selectedItem","navOpen","onMainItemMouseEnter","item","setSelected","findSelecteditem","navigations","forEach","sub","child","grandChild","path","history","location","pathname","onMainItemMouseLeave","setState","removeSelected","closeSecNav","other","isMobile","openSecNav","setTimeout","window","innerWidth","addEventListener","removeEventListener","console","log","navigationRole","filter","classList","i","active","name","onMouseEnter","onMouseLeave","href","closeSecSidenav","firebase","profile","Layout2","handleSearchBoxClose","routes","theme","header","show","fallback","Loading","renderRoutes","Footer","GullSearch","handleClose"],"mappings":"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","file":"static/js/69.6e751b3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport { getTimeDifference } from \"@utils\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { merge } from \"lodash\";\r\nimport MegaMenu from \"@gull/components/MegaMenu\";\r\n\r\nclass Layout2Header extends Component {\r\n  state = {\r\n    shorcutMenuList: [\r\n      {\r\n        icon: \"i-Shop-4\",\r\n        link: \"#\",\r\n        text: \"Home\"\r\n      },\r\n      {\r\n        icon: \"i-Library\",\r\n        link: \"#\",\r\n        text: \"Ui Kits\"\r\n      },\r\n      {\r\n        icon: \"i-Drop\",\r\n        link: \"#\",\r\n        text: \"Apps\"\r\n      },\r\n      {\r\n        icon: \"i-File-Clipboard-File--Text\",\r\n        link: \"#\",\r\n        text: \"Form\"\r\n      },\r\n      {\r\n        icon: \"i-Checked-User\",\r\n        link: \"#\",\r\n        text: \"Sessions\"\r\n      },\r\n      {\r\n        icon: \"i-Ambulance\",\r\n        link: \"#\",\r\n        text: \"Support\"\r\n      }\r\n    ],\r\n    notificationList: [\r\n      {\r\n        icon: \"i-Speach-Bubble-6\",\r\n        title: \"New message\",\r\n        description: \"James: Hey! are you busy?\",\r\n        time: \"2019-10-30T02:10:18.931Z\",\r\n        color: \"primary\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Receipt-3\",\r\n        title: \"New order received\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Empty-Box\",\r\n        title: \"Product out of stock\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-05-10T02:10:18.931Z\",\r\n        color: \"danger\",\r\n        status: \"3\"\r\n      },\r\n      {\r\n        icon: \"i-Data-Power\",\r\n        title: \"Server up!\",\r\n        description: \"Server rebooted successfully\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"3\"\r\n      }\r\n    ],\r\n    showSearchBox: false\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout2Settings: {\r\n          leftSidebar: {\r\n            open: !settings.layout2Settings.leftSidebar.open,\r\n            secondaryNavOpen: !settings.layout2Settings.leftSidebar.open\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    if (document.fullscreenEnabled) {\r\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\r\n      else document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  handleSearchBoxOpen = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout2Settings: {\r\n          searchBox: {\r\n            open: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\r\n\r\n    return (\r\n      <div className=\"main-header\">\r\n        <div className=\"logo\">\r\n          <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n\r\n        <div className=\"d-none d-lg-flex align-items-center\">\r\n          <Dropdown className=\"mr-3\">\r\n            <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n              Mega Menu\r\n            </Dropdown.Toggle>\r\n\r\n            <div className=\"mega-menu\">\r\n              <Dropdown.Menu>\r\n                <MegaMenu></MegaMenu>\r\n              </Dropdown.Menu>\r\n            </div>\r\n          </Dropdown>\r\n\r\n          <div className=\"search-bar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              onFocus={this.handleSearchBoxOpen}\r\n            />\r\n            <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ margin: \"auto\" }}></div>\r\n\r\n        <div className=\"header-part-right\">\r\n          <i\r\n            className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\r\n            data-fullscreen\r\n            onClick={this.toggleFullScreen}\r\n          ></i>\r\n\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\r\n              <i\r\n                className=\"i-Safe-Box text-muted header-icon\"\r\n                role=\"button\"\r\n              ></i>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <div className=\"menu-icon-grid\">\r\n                {shorcutMenuList.map(menu => (\r\n                  <Link key={menu.text} to={menu.link}>\r\n                    <i className={menu.icon}></i> {menu.text}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\r\n              <div\r\n                className=\"badge-top-container\"\r\n                role=\"button\"\r\n                id=\"dropdownNotification\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <span className=\"badge badge-primary\">3</span>\r\n                <i className=\"i-Bell text-muted header-icon\"></i>\r\n              </div>\r\n            </Dropdown.Toggle>\r\n\r\n            <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\r\n              {notificationList.map((note, index) => (\r\n                <div key={index} className=\"dropdown-item d-flex\">\r\n                  <div className=\"notification-icon\">\r\n                    <i className={`${note.icon} text-${note.color} mr-1`}></i>\r\n                  </div>\r\n                  <div className=\"notification-details flex-grow-1\">\r\n                    <p className=\"m-0 d-flex align-items-center\">\r\n                      <span>{note.title}</span>\r\n                      <span\r\n                        className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\r\n                      >\r\n                        {note.status}\r\n                      </span>\r\n                      <span className=\"flex-grow-1\"></span>\r\n                      <span className=\"text-small text-muted ml-auto\">\r\n                        {getTimeDifference(new Date(note.time))} ago\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"text-small text-muted m-0\">\r\n                      {note.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n\r\n          <div className=\"user col align-self-end\">\r\n            <Dropdown>\r\n              <DropdownToggle variant=\"link\" className=\"toggle-hidden\">\r\n                <img\r\n                  src=\"/assets/images/faces/1.jpg\"\r\n                  id=\"userDropdown\"\r\n                  alt=\"\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <div className=\"dropdown-header\">\r\n                  <i className=\"i-Lock-User mr-1\"></i> Timothy Carlson\r\n                </div>\r\n                <span className=\"dropdown-item cursor-pointer\">Account settings</span>\r\n                <span className=\"dropdown-item cursor-pointer\">Billing history</span>\r\n                <span\r\n                  className=\"dropdown-item cursor-pointer\"\r\n                  onClick={this.props.logoutUser}\r\n                >\r\n                  Sign out\r\n                </span>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Header.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n    setDefaultSettings,\r\n    logoutUser\r\n  })(Layout2Header)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { navigations } from \"../../navigations\";\r\nimport { merge } from \"lodash\";\r\nimport { classList, isMobile } from \"@utils\";\r\nimport Srcollbar from \"react-perfect-scrollbar\";\r\nimport { DropDownMenu } from \"@gull\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Layout2Sidenav extends Component {\r\n  windowListener = null;\r\n  state = {\r\n    selectedItem: {},\r\n    navOpen: true,\r\n    secondaryNavOpen: false\r\n  };\r\n\r\n  onMainItemMouseEnter = item => {\r\n    this.setSelected(item);\r\n  };\r\n\r\n  findSelecteditem = () => {\r\n    navigations.forEach(item => {\r\n      if (item.sub) {\r\n        item.sub.forEach(child => {\r\n          if (child.sub) {\r\n            child.sub.forEach(grandChild => {\r\n              if (grandChild.path == this.props.history.location.pathname) {\r\n                this.setSelected(item);\r\n              }\r\n            });\r\n          } else {\r\n            if (child.path == this.props.history.location.pathname) {\r\n              this.setSelected(item);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        if (item.path == this.props.history.location.pathname) {\r\n          this.setSelected(item);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onMainItemMouseLeave = () => {};\r\n\r\n  setSelected = selectedItem => {\r\n    this.setState({ selectedItem });\r\n    // console.log(selectedItem);\r\n  };\r\n\r\n  removeSelected = () => {\r\n    this.setState({ selectedItem: null });\r\n    // console.log('removed');\r\n  };\r\n\r\n  closeSecNav = () => {\r\n    // console.log(\"closing sec sidenav\");\r\n    let { setLayoutSettings, settings } = this.props;\r\n    let other = {};\r\n\r\n    if (isMobile()) {\r\n      other.open = false;\r\n    }\r\n\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout2Settings: {\r\n          leftSidebar: {\r\n            ...other,\r\n            secondaryNavOpen: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  openSecNav = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout2Settings: {\r\n          leftSidebar: {\r\n            open: true,\r\n            secondaryNavOpen: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.findSelecteditem();\r\n    })\r\n    if (window)\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSecNav();\r\n      } else {\r\n        this.openSecNav();\r\n      }\r\n\r\n    this.windowListener = window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSecNav();\r\n      } else {\r\n        this.openSecNav();\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.windowListener) {\r\n      window.removeEventListener(\"resize\", this.windowListener);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { settings } = this.props;\r\n    let { selectedItem } = this.state;\r\n    console.log('menu user role',this.props.user.role );\r\n    const navigationRole = navigations.filter((item) => {\r\n      \r\n      if(item.role==this.props.user.role){\r\n        return item;\r\n      }\r\n    \r\n    \r\n    });\r\n   \r\n    return (\r\n      <div className=\"side-content-wrap\">\r\n        <Srcollbar\r\n          className={classList({\r\n            \"sidebar-left o-hidden rtl-ps-none\": true,\r\n            open: settings.layout2Settings.leftSidebar.open\r\n          })}\r\n        >\r\n          <ul className=\"navigation-left\">\r\n            {navigationRole.map((item, i) => (\r\n              <li\r\n                className={classList({\r\n                  \"nav-item\": true,\r\n                  active: item.name === selectedItem.name\r\n                })}\r\n                onMouseEnter={() => {\r\n                  this.onMainItemMouseEnter(item);\r\n                }}\r\n                onMouseLeave={this.onMainItemMouseLeave}\r\n                key={i}\r\n              >\r\n                {item.path && item.type !== \"extLink\" && (\r\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </NavLink>\r\n                )}\r\n                {item.path && item.type === \"extLink\" && (\r\n                  <a className=\"nav-item-hold\" href={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </a>\r\n                )}\r\n                {!item.path && (\r\n                  <div className=\"nav-item-hold\">\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"triangle\"></div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Srcollbar>\r\n\r\n        <Srcollbar\r\n          className={classList({\r\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\r\n            open: settings.layout2Settings.leftSidebar.secondaryNavOpen\r\n          })}\r\n        >\r\n          <i className=\"sidebar-close i-Close\" onClick={this.closeSecNav}></i>\r\n          <div className=\"logo ml-4 mb-4\">\r\n            <img src=\"/assets/images/logo-text.png\" alt=\"logo\" />\r\n          </div>\r\n          <div className=\"header mb-3 ml-4\">\r\n            <h5 className=\"font-weight-bold mb-1\">{selectedItem.name}</h5>\r\n            <p>{selectedItem.description}</p>\r\n          </div>\r\n          {selectedItem && selectedItem.sub && (\r\n            <DropDownMenu\r\n              menu={selectedItem.sub}\r\n              closeSecSidenav={this.closeSecNav}\r\n            ></DropDownMenu>\r\n          )}\r\n        </Srcollbar>\r\n        <div\r\n          className={classList({\r\n            \"sidebar-overlay\": true,\r\n            open: settings.layout2Settings.leftSidebar.secondaryNavOpen\r\n          })}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout2Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings,\r\n  user: state.firebase.profile\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings\r\n  })(Layout2Sidenav)\r\n);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { renderRoutes } from \"react-router-config\";\r\n\r\nimport Footer from \"../SharedComponents/Footer\";\r\nimport Layout2Header from \"./Layout2Header\";\r\nimport Layout2Sidenav from \"./Layout2Sidenav\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { classList } from \"@utils\";\r\nimport { merge } from \"lodash\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport GullSearch from \"@gull/components/GullSearch\";\r\nimport Loading from \"@gull/components/GullLoadable/Loading\";\r\n\r\nclass Layout2 extends Component {\r\n  state = {};\r\n\r\n  handleSearchBoxClose = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout2Settings: {\r\n          searchBox: {\r\n            open: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { settings, routes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className={`${classList({\r\n            \"app-admin-wrap layout-sidebar-large clearfix\": true,\r\n            \"sidenav-open\": settings.layout2Settings.leftSidebar.open\r\n          })} ${settings.layout2Settings.leftSidebar.theme}`}\r\n        >\r\n          <Layout2Sidenav></Layout2Sidenav>\r\n          {/* sidebar */}\r\n\r\n          <div\r\n            className={classList({\r\n              \"main-content-wrap d-flex flex-column\": true,\r\n              \"sidenav-open\": settings.layout2Settings.leftSidebar.open\r\n            })}\r\n          >\r\n            {(settings.layout2Settings.header.show && <Layout2Header></Layout2Header>)}\r\n            <Suspense fallback={<Loading />}>\r\n              <div className=\"main-content\">{renderRoutes(routes)}</div>\r\n            </Suspense>\r\n            <Footer></Footer>\r\n          </div>\r\n        </div>\r\n        <GullSearch\r\n          open={settings.layout2Settings.searchBox.open}\r\n          handleClose={this.handleSearchBoxClose}\r\n        ></GullSearch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLayoutSettings })(Layout2);\r\n"],"sourceRoot":""}